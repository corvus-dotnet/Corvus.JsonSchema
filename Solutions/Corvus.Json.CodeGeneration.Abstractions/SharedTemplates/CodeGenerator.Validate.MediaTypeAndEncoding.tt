<#@ template language="C#" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Corvus.Json" #>
<#
    // This is only emitted if HasMediaTypeOrEncoding is true
    if(!ShouldGenerate)
    {
        throw new InvalidOperationException("CodeGenerator.Validate.MediaTypeAndEncoding should not be emitted if HasMediaTypeOrEncoding is false.");
    } #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable

using System.Text.Json;
using Corvus.Json;

namespace <#= Namespace #>;

<# BeginNesting(); #>
<#= FormattedTypeDocumentation #>
public readonly partial struct <#= TypeDeclaration.DotnetTypeName #>
{
    private ValidationContext ValidateMediaTypeAndEncoding(JsonValueKind valueKind, ValidationContext result, ValidationLevel level)
    {
        if (valueKind != JsonValueKind.String)
        {
            return result;
        }

<#  if (IsJsonBase64Content)
    { #>
        return this.As<JsonBase64Content>().Validate(result, level);
<#  }
    if (IsJsonBase64String)
    { #>
        return this.As<JsonBase64String>().Validate(result, level);
<#  }
    if (IsJsonContent)
    { #>
        return this.As<JsonContent>().Validate(result, level);
<#  } #>
    }
}
<# EndNesting(); #>
<#+
    public bool ShouldGenerate
    {
        get
        {
            return HasMediaTypeOrEncoding;
        }
    }
#>