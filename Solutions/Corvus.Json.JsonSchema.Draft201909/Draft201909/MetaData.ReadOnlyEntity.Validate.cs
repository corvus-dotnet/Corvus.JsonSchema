//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable

using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;

namespace Corvus.Json.JsonSchema.Draft201909;

/// <summary>
/// Meta-data vocabulary meta-schema
/// </summary>
public readonly partial struct MetaData
{
    /// <summary>
    /// Generated from JSON Schema.
    /// </summary>
    /// <remarks>
    /// <para>
    /// Examples:
    /// <example>
    /// <code>
    /// false
    /// </code>
    /// </example>
    /// </para>
    /// </remarks>
    public readonly partial struct ReadOnlyEntity
    {
        /// <inheritdoc/>
        public ValidationContext Validate(in ValidationContext validationContext, ValidationLevel level = ValidationLevel.Flag)
        {
            ValidationContext result = validationContext;
            if (level > ValidationLevel.Flag)
            {
                result = result.UsingResults();
            }

            if (level > ValidationLevel.Basic)
            {
                result = result.UsingStack();
                result = result.PushSchemaLocation("https://json-schema.org/draft/2019-09/meta/meta-data#/properties/readOnly");
            }

            JsonValueKind valueKind = this.ValueKind;
            result = CorvusValidation.TypeValidationHandler(this, valueKind, result, level);
            if (level == ValidationLevel.Flag && !result.IsValid)
            {
                return result;
            }

            if (level > ValidationLevel.Basic)
            {
                result = result.PopLocation();
            }

            return result;
        }

        private static partial class CorvusValidation
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static ValidationContext TypeValidationHandler(
                in ReadOnlyEntity value,
                JsonValueKind valueKind,
                in ValidationContext validationContext,
                ValidationLevel level = ValidationLevel.Flag)
            {
                ValidationContext result = validationContext;
                bool isValid = false;
                ValidationContext localResultBoolean = Corvus.Json.Validate.TypeBoolean(valueKind, result.CreateChildContext(), level);
                if (level == ValidationLevel.Flag && localResultBoolean.IsValid)
                {
                    return validationContext;
                }

                if (localResultBoolean.IsValid)
                {
                    isValid = true;
                }

                return result.MergeResults(
                    isValid,
                    level,
                    localResultBoolean);
            }
        }
    }
}
