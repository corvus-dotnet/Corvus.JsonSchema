//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using Corvus.Json;

namespace Corvus.Json.JsonSchema.Draft201909;
/// <summary>
/// Core and Validation specifications meta-schema
/// </summary>
public readonly partial struct Schema
{
    /// <summary>
    /// Gets the value as a <see cref = "Corvus.Json.JsonSchema.Draft201909.Core"/>.
    /// </summary>
    public Corvus.Json.JsonSchema.Draft201909.Core AsCore
    {
        get
        {
            return (Corvus.Json.JsonSchema.Draft201909.Core)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Corvus.Json.JsonSchema.Draft201909.Core"/>.
    /// </summary>
    public bool IsCore
    {
        get
        {
            return ((Corvus.Json.JsonSchema.Draft201909.Core)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Corvus.Json.JsonSchema.Draft201909.Core"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsCore(out Corvus.Json.JsonSchema.Draft201909.Core result)
    {
        result = (Corvus.Json.JsonSchema.Draft201909.Core)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Corvus.Json.JsonSchema.Draft201909.Applicator"/>.
    /// </summary>
    public Corvus.Json.JsonSchema.Draft201909.Applicator AsApplicator
    {
        get
        {
            return (Corvus.Json.JsonSchema.Draft201909.Applicator)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Corvus.Json.JsonSchema.Draft201909.Applicator"/>.
    /// </summary>
    public bool IsApplicator
    {
        get
        {
            return ((Corvus.Json.JsonSchema.Draft201909.Applicator)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Corvus.Json.JsonSchema.Draft201909.Applicator"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsApplicator(out Corvus.Json.JsonSchema.Draft201909.Applicator result)
    {
        result = (Corvus.Json.JsonSchema.Draft201909.Applicator)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Corvus.Json.JsonSchema.Draft201909.Validation"/>.
    /// </summary>
    public Corvus.Json.JsonSchema.Draft201909.Validation AsValidation
    {
        get
        {
            return (Corvus.Json.JsonSchema.Draft201909.Validation)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Corvus.Json.JsonSchema.Draft201909.Validation"/>.
    /// </summary>
    public bool IsValidation
    {
        get
        {
            return ((Corvus.Json.JsonSchema.Draft201909.Validation)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Corvus.Json.JsonSchema.Draft201909.Validation"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsValidation(out Corvus.Json.JsonSchema.Draft201909.Validation result)
    {
        result = (Corvus.Json.JsonSchema.Draft201909.Validation)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Corvus.Json.JsonSchema.Draft201909.MetaData"/>.
    /// </summary>
    public Corvus.Json.JsonSchema.Draft201909.MetaData AsMetaData
    {
        get
        {
            return (Corvus.Json.JsonSchema.Draft201909.MetaData)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Corvus.Json.JsonSchema.Draft201909.MetaData"/>.
    /// </summary>
    public bool IsMetaData
    {
        get
        {
            return ((Corvus.Json.JsonSchema.Draft201909.MetaData)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Corvus.Json.JsonSchema.Draft201909.MetaData"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsMetaData(out Corvus.Json.JsonSchema.Draft201909.MetaData result)
    {
        result = (Corvus.Json.JsonSchema.Draft201909.MetaData)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Corvus.Json.JsonSchema.Draft201909.Format"/>.
    /// </summary>
    public Corvus.Json.JsonSchema.Draft201909.Format AsFormat
    {
        get
        {
            return (Corvus.Json.JsonSchema.Draft201909.Format)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Corvus.Json.JsonSchema.Draft201909.Format"/>.
    /// </summary>
    public bool IsFormat
    {
        get
        {
            return ((Corvus.Json.JsonSchema.Draft201909.Format)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Corvus.Json.JsonSchema.Draft201909.Format"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsFormat(out Corvus.Json.JsonSchema.Draft201909.Format result)
    {
        result = (Corvus.Json.JsonSchema.Draft201909.Format)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Corvus.Json.JsonSchema.Draft201909.Content"/>.
    /// </summary>
    public Corvus.Json.JsonSchema.Draft201909.Content AsContent
    {
        get
        {
            return (Corvus.Json.JsonSchema.Draft201909.Content)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Corvus.Json.JsonSchema.Draft201909.Content"/>.
    /// </summary>
    public bool IsContent
    {
        get
        {
            return ((Corvus.Json.JsonSchema.Draft201909.Content)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Corvus.Json.JsonSchema.Draft201909.Content"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsContent(out Corvus.Json.JsonSchema.Draft201909.Content result)
    {
        result = (Corvus.Json.JsonSchema.Draft201909.Content)this;
        return result.IsValid();
    }
}