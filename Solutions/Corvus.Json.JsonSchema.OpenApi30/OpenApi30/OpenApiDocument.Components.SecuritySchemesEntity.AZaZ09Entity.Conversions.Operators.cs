//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Corvus.Json.JsonSchema.OpenApi30;
public readonly partial struct OpenApiDocument
{
    public readonly partial struct Components
    {
        public readonly partial struct SecuritySchemesEntity
        {
            /// <summary>
            /// Generated from JSON Schema.
            /// </summary>
            public readonly partial struct AZaZ09Entity
            {
                /// <summary>
                /// Conversion to <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Reference"/>.
                /// </summary>
                /// <param name = "value">The value from which to convert.</param>
                public static explicit operator Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Reference(AZaZ09Entity value)
                {
                    if ((value.backing & Backing.JsonElement) != 0)
                    {
                        return new(value.AsJsonElement);
                    }

                    if ((value.backing & Backing.Object) != 0)
                    {
                        return new(value.objectBacking);
                    }

                    return Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Reference.Undefined;
                }

                /// <summary>
                /// Conversion from <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Reference"/>.
                /// </summary>
                /// <param name = "value">The value from which to convert.</param>
                public static implicit operator AZaZ09Entity(Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Reference value)
                {
                    if (value.HasJsonElementBacking)
                    {
                        return new(value.AsJsonElement);
                    }

                    return value.ValueKind switch
                    {
                        JsonValueKind.Object => new(value.AsPropertyBacking()),
                        _ => Undefined
                    };
                }

                /// <summary>
                /// Conversion to <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.SecurityScheme"/>.
                /// </summary>
                /// <param name = "value">The value from which to convert.</param>
                public static explicit operator Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.SecurityScheme(AZaZ09Entity value)
                {
                    if ((value.backing & Backing.JsonElement) != 0)
                    {
                        return new(value.AsJsonElement);
                    }

                    return Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.SecurityScheme.Undefined;
                }

                /// <summary>
                /// Conversion from <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.SecurityScheme"/>.
                /// </summary>
                /// <param name = "value">The value from which to convert.</param>
                public static implicit operator AZaZ09Entity(Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.SecurityScheme value)
                {
                    if (value.HasJsonElementBacking)
                    {
                        return new(value.AsJsonElement);
                    }

                    return value.ValueKind switch
                    {
                        _ => Undefined
                    };
                }

                /// <summary>
                /// Conversion to <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.APiKeySecurityScheme"/>.
                /// </summary>
                /// <param name = "value">The value from which to convert.</param>
                public static explicit operator Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.APiKeySecurityScheme(AZaZ09Entity value)
                {
                    if ((value.backing & Backing.JsonElement) != 0)
                    {
                        return new(value.AsJsonElement);
                    }

                    if ((value.backing & Backing.Object) != 0)
                    {
                        return new(value.objectBacking);
                    }

                    return Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.APiKeySecurityScheme.Undefined;
                }

                /// <summary>
                /// Conversion from <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.APiKeySecurityScheme"/>.
                /// </summary>
                /// <param name = "value">The value from which to convert.</param>
                public static implicit operator AZaZ09Entity(Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.APiKeySecurityScheme value)
                {
                    if (value.HasJsonElementBacking)
                    {
                        return new(value.AsJsonElement);
                    }

                    return value.ValueKind switch
                    {
                        JsonValueKind.Object => new(value.AsPropertyBacking()),
                        _ => Undefined
                    };
                }

                /// <summary>
                /// Conversion to <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HTtPSecurityScheme"/>.
                /// </summary>
                /// <param name = "value">The value from which to convert.</param>
                public static explicit operator Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HTtPSecurityScheme(AZaZ09Entity value)
                {
                    if ((value.backing & Backing.JsonElement) != 0)
                    {
                        return new(value.AsJsonElement);
                    }

                    if ((value.backing & Backing.Object) != 0)
                    {
                        return new(value.objectBacking);
                    }

                    return Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HTtPSecurityScheme.Undefined;
                }

                /// <summary>
                /// Conversion from <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HTtPSecurityScheme"/>.
                /// </summary>
                /// <param name = "value">The value from which to convert.</param>
                public static implicit operator AZaZ09Entity(Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HTtPSecurityScheme value)
                {
                    if (value.HasJsonElementBacking)
                    {
                        return new(value.AsJsonElement);
                    }

                    return value.ValueKind switch
                    {
                        JsonValueKind.Object => new(value.AsPropertyBacking()),
                        _ => Undefined
                    };
                }

                /// <summary>
                /// Conversion to <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HTtPSecurityScheme.Bearer"/>.
                /// </summary>
                /// <param name = "value">The value from which to convert.</param>
                public static explicit operator Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HTtPSecurityScheme.Bearer(AZaZ09Entity value)
                {
                    if ((value.backing & Backing.JsonElement) != 0)
                    {
                        return new(value.AsJsonElement);
                    }

                    if ((value.backing & Backing.Object) != 0)
                    {
                        return new(value.objectBacking);
                    }

                    return Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HTtPSecurityScheme.Bearer.Undefined;
                }

                /// <summary>
                /// Conversion from <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HTtPSecurityScheme.Bearer"/>.
                /// </summary>
                /// <param name = "value">The value from which to convert.</param>
                public static explicit operator AZaZ09Entity(Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HTtPSecurityScheme.Bearer value)
                {
                    if (value.HasJsonElementBacking)
                    {
                        return new(value.AsJsonElement);
                    }

                    return value.ValueKind switch
                    {
                        JsonValueKind.Object => new(value.AsPropertyBacking()),
                        _ => Undefined
                    };
                }

                /// <summary>
                /// Conversion to <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HTtPSecurityScheme.NonBearer"/>.
                /// </summary>
                /// <param name = "value">The value from which to convert.</param>
                public static explicit operator Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HTtPSecurityScheme.NonBearer(AZaZ09Entity value)
                {
                    if ((value.backing & Backing.JsonElement) != 0)
                    {
                        return new(value.AsJsonElement);
                    }

                    if ((value.backing & Backing.Object) != 0)
                    {
                        return new(value.objectBacking);
                    }

                    return Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HTtPSecurityScheme.NonBearer.Undefined;
                }

                /// <summary>
                /// Conversion from <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HTtPSecurityScheme.NonBearer"/>.
                /// </summary>
                /// <param name = "value">The value from which to convert.</param>
                public static explicit operator AZaZ09Entity(Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HTtPSecurityScheme.NonBearer value)
                {
                    if (value.HasJsonElementBacking)
                    {
                        return new(value.AsJsonElement);
                    }

                    return value.ValueKind switch
                    {
                        JsonValueKind.Object => new(value.AsPropertyBacking()),
                        _ => Undefined
                    };
                }

                /// <summary>
                /// Conversion to <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.OAuth2SecurityScheme"/>.
                /// </summary>
                /// <param name = "value">The value from which to convert.</param>
                public static explicit operator Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.OAuth2SecurityScheme(AZaZ09Entity value)
                {
                    if ((value.backing & Backing.JsonElement) != 0)
                    {
                        return new(value.AsJsonElement);
                    }

                    if ((value.backing & Backing.Object) != 0)
                    {
                        return new(value.objectBacking);
                    }

                    return Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.OAuth2SecurityScheme.Undefined;
                }

                /// <summary>
                /// Conversion from <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.OAuth2SecurityScheme"/>.
                /// </summary>
                /// <param name = "value">The value from which to convert.</param>
                public static implicit operator AZaZ09Entity(Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.OAuth2SecurityScheme value)
                {
                    if (value.HasJsonElementBacking)
                    {
                        return new(value.AsJsonElement);
                    }

                    return value.ValueKind switch
                    {
                        JsonValueKind.Object => new(value.AsPropertyBacking()),
                        _ => Undefined
                    };
                }

                /// <summary>
                /// Conversion to <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.OpenIdConnectSecurityScheme"/>.
                /// </summary>
                /// <param name = "value">The value from which to convert.</param>
                public static explicit operator Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.OpenIdConnectSecurityScheme(AZaZ09Entity value)
                {
                    if ((value.backing & Backing.JsonElement) != 0)
                    {
                        return new(value.AsJsonElement);
                    }

                    if ((value.backing & Backing.Object) != 0)
                    {
                        return new(value.objectBacking);
                    }

                    return Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.OpenIdConnectSecurityScheme.Undefined;
                }

                /// <summary>
                /// Conversion from <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.OpenIdConnectSecurityScheme"/>.
                /// </summary>
                /// <param name = "value">The value from which to convert.</param>
                public static implicit operator AZaZ09Entity(Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.OpenIdConnectSecurityScheme value)
                {
                    if (value.HasJsonElementBacking)
                    {
                        return new(value.AsJsonElement);
                    }

                    return value.ValueKind switch
                    {
                        JsonValueKind.Object => new(value.AsPropertyBacking()),
                        _ => Undefined
                    };
                }
            }
        }
    }
}