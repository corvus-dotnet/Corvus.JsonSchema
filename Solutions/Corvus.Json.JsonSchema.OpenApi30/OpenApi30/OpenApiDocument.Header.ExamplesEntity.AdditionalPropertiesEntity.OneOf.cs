//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Corvus.Json.JsonSchema.OpenApi30;
public readonly partial struct OpenApiDocument
{
    public readonly partial struct Header
    {
        public readonly partial struct ExamplesEntity
        {
            /// <summary>
            /// Generated from JSON Schema.
            /// </summary>
            public readonly partial struct AdditionalPropertiesEntity
            {
                /// <summary>
                /// Matches the value against each of the any of values, and returns the result of calling the provided match function for the first match found.
                /// </summary>
                /// <param name = "context">The context to pass to the match function.</param>
                /// <param name = "match0">The function to call if the value matches the <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Example"/> type.</param>
                /// <param name = "match1">The function to call if the value matches the <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Reference"/> type.</param>
                /// <param name = "defaultMatch">The fallback match.</param>
                public TOut Match<TIn, TOut>(in TIn context, Matcher<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Example, TIn, TOut> match0, Matcher<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Reference, TIn, TOut> match1, Matcher<AdditionalPropertiesEntity, TIn, TOut> defaultMatch)
                {
                    var oneOf0 = this.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Example>();
                    if (oneOf0.IsValid())
                    {
                        return match0(oneOf0, context);
                    }

                    var oneOf1 = this.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Reference>();
                    if (oneOf1.IsValid())
                    {
                        return match1(oneOf1, context);
                    }

                    return defaultMatch(this, context);
                }

                /// <summary>
                /// Matches the value against each of the any of values, and returns the result of calling the provided match function for the first match found.
                /// </summary>
                /// <param name = "match0">The function to call if the value matches the <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Example"/> type.</param>
                /// <param name = "match1">The function to call if the value matches the <see cref = "Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Reference"/> type.</param>
                /// <param name = "defaultMatch">The fallback match.</param>
                public TOut Match<TOut>(Matcher<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Example, TOut> match0, Matcher<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Reference, TOut> match1, Matcher<AdditionalPropertiesEntity, TOut> defaultMatch)
                {
                    var oneOf0 = this.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Example>();
                    if (oneOf0.IsValid())
                    {
                        return match0(oneOf0);
                    }

                    var oneOf1 = this.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Reference>();
                    if (oneOf1.IsValid())
                    {
                        return match1(oneOf1);
                    }

                    return defaultMatch(this);
                }
            }
        }
    }
}