//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Corvus.Json.JsonSchema.OpenApi30;
public readonly partial struct OpenApiDocument
{
    public readonly partial struct HttpSecurityScheme
    {
        /// <summary>
        /// Generated from JSON Schema.
        /// </summary>
        /// <remarks>
        /// <para>
        /// Bearer
        /// </para>
        /// </remarks>
        public readonly partial struct Bearer
        {
            /// <summary>
            /// The well-known property names in the JSON object.
            /// </summary>
            public static class JsonPropertyNames
            {
                /// <summary>
                /// JSON property name for <see cref = "Scheme"/>.
                /// </summary>
                public static ReadOnlySpan<byte> SchemeUtf8 => "scheme"u8;

                /// <summary>
                /// JSON property name for <see cref = "Scheme"/>.
                /// </summary>
                public const string Scheme = "scheme";
            }

            /// <summary>
            /// Gets the (optional) <c>scheme</c> property.
            /// </summary>
            public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HttpSecurityScheme.Bearer.SchemeEntity Scheme
            {
                get
                {
                    if ((this.backing & Backing.JsonElement) != 0)
                    {
                        if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                        {
                            return default;
                        }

                        if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.SchemeUtf8, out JsonElement result))
                        {
                            return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HttpSecurityScheme.Bearer.SchemeEntity(result);
                        }
                    }

                    if ((this.backing & Backing.Object) != 0)
                    {
                        if (this.objectBacking.TryGetValue(JsonPropertyNames.Scheme, out JsonAny result))
                        {
                            return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HttpSecurityScheme.Bearer.SchemeEntity>();
                        }
                    }

                    return default;
                }
            }

            /// <summary>
            /// Creates an instance of a <see cref = "Bearer"/>.
            /// </summary>
            public static Bearer Create(Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HttpSecurityScheme.Bearer.SchemeEntity? scheme = null)
            {
                var builder = ImmutableList.CreateBuilder<JsonObjectProperty>();
                if (scheme is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HttpSecurityScheme.Bearer.SchemeEntity scheme__)
                {
                    builder.Add(JsonPropertyNames.Scheme, scheme__.AsAny);
                }

                return new(builder.ToImmutable());
            }

            /// <summary>
            /// Sets scheme.
            /// </summary>
            /// <param name = "value">The value to set.</param>
            /// <returns>The entity with the updated property.</returns>
            public Bearer WithScheme(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HttpSecurityScheme.Bearer.SchemeEntity value)
            {
                return this.SetProperty(JsonPropertyNames.Scheme, value);
            }

            private static ValidationContext __CorvusValidateScheme(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
            {
                return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.HttpSecurityScheme.Bearer.SchemeEntity>().Validate(validationContext, level);
            }

            /// <summary>
            /// Tries to get the validator for the given property.
            /// </summary>
            /// <param name = "property">The property for which to get the validator.</param>
            /// <param name = "hasJsonElementBacking"><c>True</c> if the object containing the property has a JsonElement backing.</param>
            /// <param name = "propertyValidator">The validator for the property, if provided by this schema.</param>
            /// <returns><c>True</c> if the validator was found.</returns>
            private bool __TryGetCorvusLocalPropertiesValidator(in JsonObjectProperty property, bool hasJsonElementBacking, [NotNullWhen(true)] out ObjectPropertyValidator? propertyValidator)
            {
                if (hasJsonElementBacking)
                {
                    if (property.NameEquals(JsonPropertyNames.SchemeUtf8))
                    {
                        propertyValidator = __CorvusValidateScheme;
                        return true;
                    }
                }
                else
                {
                    if (property.NameEquals(JsonPropertyNames.Scheme))
                    {
                        propertyValidator = __CorvusValidateScheme;
                        return true;
                    }
                }

                propertyValidator = null;
                return false;
            }
        }
    }
}