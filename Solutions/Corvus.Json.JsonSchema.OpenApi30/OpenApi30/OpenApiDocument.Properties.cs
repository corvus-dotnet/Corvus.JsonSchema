//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Corvus.Json.JsonSchema.OpenApi30;
/// <summary>
/// Generated from JSON Schema.
/// </summary>
/// <remarks>
/// <para>
/// The description of OpenAPI v3.0.x documents, as defined by https://spec.openapis.org/oas/v3.0.3
/// </para>
/// </remarks>
public readonly partial struct OpenApiDocument
{
    /// <summary>
    /// The well-known property names in the JSON object.
    /// </summary>
    public static class JsonPropertyNames
    {
        /// <summary>
        /// JSON property name for <see cref = "ComponentsValue"/>.
        /// </summary>
        public static ReadOnlySpan<byte> ComponentsValueUtf8 => "components"u8;

        /// <summary>
        /// JSON property name for <see cref = "ComponentsValue"/>.
        /// </summary>
        public const string ComponentsValue = "components";
        /// <summary>
        /// JSON property name for <see cref = "ExternalDocs"/>.
        /// </summary>
        public static ReadOnlySpan<byte> ExternalDocsUtf8 => "externalDocs"u8;

        /// <summary>
        /// JSON property name for <see cref = "ExternalDocs"/>.
        /// </summary>
        public const string ExternalDocs = "externalDocs";
        /// <summary>
        /// JSON property name for <see cref = "InfoValue"/>.
        /// </summary>
        public static ReadOnlySpan<byte> InfoValueUtf8 => "info"u8;

        /// <summary>
        /// JSON property name for <see cref = "InfoValue"/>.
        /// </summary>
        public const string InfoValue = "info";
        /// <summary>
        /// JSON property name for <see cref = "Openapi"/>.
        /// </summary>
        public static ReadOnlySpan<byte> OpenapiUtf8 => "openapi"u8;

        /// <summary>
        /// JSON property name for <see cref = "Openapi"/>.
        /// </summary>
        public const string Openapi = "openapi";
        /// <summary>
        /// JSON property name for <see cref = "PathsValue"/>.
        /// </summary>
        public static ReadOnlySpan<byte> PathsValueUtf8 => "paths"u8;

        /// <summary>
        /// JSON property name for <see cref = "PathsValue"/>.
        /// </summary>
        public const string PathsValue = "paths";
        /// <summary>
        /// JSON property name for <see cref = "Security"/>.
        /// </summary>
        public static ReadOnlySpan<byte> SecurityUtf8 => "security"u8;

        /// <summary>
        /// JSON property name for <see cref = "Security"/>.
        /// </summary>
        public const string Security = "security";
        /// <summary>
        /// JSON property name for <see cref = "Servers"/>.
        /// </summary>
        public static ReadOnlySpan<byte> ServersUtf8 => "servers"u8;

        /// <summary>
        /// JSON property name for <see cref = "Servers"/>.
        /// </summary>
        public const string Servers = "servers";
        /// <summary>
        /// JSON property name for <see cref = "Tags"/>.
        /// </summary>
        public static ReadOnlySpan<byte> TagsUtf8 => "tags"u8;

        /// <summary>
        /// JSON property name for <see cref = "Tags"/>.
        /// </summary>
        public const string Tags = "tags";
    }

    /// <summary>
    /// Gets the (optional) <c>components</c> property.
    /// </summary>
    public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Components ComponentsValue
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.ComponentsValueUtf8, out JsonElement result))
                {
                    return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Components(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(JsonPropertyNames.ComponentsValue, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Components>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets the (optional) <c>externalDocs</c> property.
    /// </summary>
    public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ExternalDocumentation ExternalDocs
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.ExternalDocsUtf8, out JsonElement result))
                {
                    return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ExternalDocumentation(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(JsonPropertyNames.ExternalDocs, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ExternalDocumentation>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets the <c>info</c> property. If the instance is valid, this property will be not be <c>undefined</c>.
    /// </summary>
    public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Info InfoValue
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.InfoValueUtf8, out JsonElement result))
                {
                    return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Info(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(JsonPropertyNames.InfoValue, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Info>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets the <c>openapi</c> property. If the instance is valid, this property will be not be <c>undefined</c>.
    /// </summary>
    public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.OpenapiEntity Openapi
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.OpenapiUtf8, out JsonElement result))
                {
                    return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.OpenapiEntity(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(JsonPropertyNames.Openapi, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.OpenapiEntity>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets the <c>paths</c> property. If the instance is valid, this property will be not be <c>undefined</c>.
    /// </summary>
    public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Paths PathsValue
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.PathsValueUtf8, out JsonElement result))
                {
                    return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Paths(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(JsonPropertyNames.PathsValue, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Paths>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets the (optional) <c>security</c> property.
    /// </summary>
    public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.SecurityRequirementArray Security
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.SecurityUtf8, out JsonElement result))
                {
                    return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.SecurityRequirementArray(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(JsonPropertyNames.Security, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.SecurityRequirementArray>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets the (optional) <c>servers</c> property.
    /// </summary>
    public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ServerArray Servers
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.ServersUtf8, out JsonElement result))
                {
                    return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ServerArray(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(JsonPropertyNames.Servers, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ServerArray>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets the (optional) <c>tags</c> property.
    /// </summary>
    public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.TagArray Tags
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.TagsUtf8, out JsonElement result))
                {
                    return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.TagArray(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(JsonPropertyNames.Tags, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.TagArray>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Creates an instance of a <see cref = "OpenApiDocument"/>.
    /// </summary>
    public static OpenApiDocument Create(Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Info infoValue, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.OpenapiEntity openapi, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Paths pathsValue, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Components? componentsValue = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ExternalDocumentation? externalDocs = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.SecurityRequirementArray? security = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ServerArray? servers = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.TagArray? tags = null)
    {
        var builder = ImmutableList.CreateBuilder<JsonObjectProperty>();
        builder.Add(JsonPropertyNames.InfoValue, infoValue.AsAny);
        builder.Add(JsonPropertyNames.Openapi, openapi.AsAny);
        builder.Add(JsonPropertyNames.PathsValue, pathsValue.AsAny);
        if (componentsValue is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Components componentsValue__)
        {
            builder.Add(JsonPropertyNames.ComponentsValue, componentsValue__.AsAny);
        }

        if (externalDocs is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ExternalDocumentation externalDocs__)
        {
            builder.Add(JsonPropertyNames.ExternalDocs, externalDocs__.AsAny);
        }

        if (security is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.SecurityRequirementArray security__)
        {
            builder.Add(JsonPropertyNames.Security, security__.AsAny);
        }

        if (servers is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ServerArray servers__)
        {
            builder.Add(JsonPropertyNames.Servers, servers__.AsAny);
        }

        if (tags is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.TagArray tags__)
        {
            builder.Add(JsonPropertyNames.Tags, tags__.AsAny);
        }

        return new(builder.ToImmutable());
    }

    /// <summary>
    /// Sets components.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public OpenApiDocument WithComponentsValue(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Components value)
    {
        return this.SetProperty(JsonPropertyNames.ComponentsValue, value);
    }

    /// <summary>
    /// Sets externalDocs.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public OpenApiDocument WithExternalDocs(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ExternalDocumentation value)
    {
        return this.SetProperty(JsonPropertyNames.ExternalDocs, value);
    }

    /// <summary>
    /// Sets info.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public OpenApiDocument WithInfoValue(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Info value)
    {
        return this.SetProperty(JsonPropertyNames.InfoValue, value);
    }

    /// <summary>
    /// Sets openapi.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public OpenApiDocument WithOpenapi(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.OpenapiEntity value)
    {
        return this.SetProperty(JsonPropertyNames.Openapi, value);
    }

    /// <summary>
    /// Sets paths.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public OpenApiDocument WithPathsValue(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Paths value)
    {
        return this.SetProperty(JsonPropertyNames.PathsValue, value);
    }

    /// <summary>
    /// Sets security.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public OpenApiDocument WithSecurity(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.SecurityRequirementArray value)
    {
        return this.SetProperty(JsonPropertyNames.Security, value);
    }

    /// <summary>
    /// Sets servers.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public OpenApiDocument WithServers(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ServerArray value)
    {
        return this.SetProperty(JsonPropertyNames.Servers, value);
    }

    /// <summary>
    /// Sets tags.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public OpenApiDocument WithTags(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.TagArray value)
    {
        return this.SetProperty(JsonPropertyNames.Tags, value);
    }

    private static ValidationContext __CorvusValidateOpenapi(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.OpenapiEntity>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateInfoValue(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Info>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidatePathsValue(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Paths>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateExternalDocs(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ExternalDocumentation>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateServers(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ServerArray>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateSecurity(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.SecurityRequirementArray>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateTags(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.TagArray>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateComponentsValue(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Components>().Validate(validationContext, level);
    }

    /// <summary>
    /// Tries to get the validator for the given property.
    /// </summary>
    /// <param name = "property">The property for which to get the validator.</param>
    /// <param name = "hasJsonElementBacking"><c>True</c> if the object containing the property has a JsonElement backing.</param>
    /// <param name = "propertyValidator">The validator for the property, if provided by this schema.</param>
    /// <returns><c>True</c> if the validator was found.</returns>
    private bool __TryGetCorvusLocalPropertiesValidator(in JsonObjectProperty property, bool hasJsonElementBacking, [NotNullWhen(true)] out ObjectPropertyValidator? propertyValidator)
    {
        if (hasJsonElementBacking)
        {
            if (property.NameEquals(JsonPropertyNames.OpenapiUtf8))
            {
                propertyValidator = __CorvusValidateOpenapi;
                return true;
            }
            else if (property.NameEquals(JsonPropertyNames.InfoValueUtf8))
            {
                propertyValidator = __CorvusValidateInfoValue;
                return true;
            }
            else if (property.NameEquals(JsonPropertyNames.PathsValueUtf8))
            {
                propertyValidator = __CorvusValidatePathsValue;
                return true;
            }
            else if (property.NameEquals(JsonPropertyNames.ExternalDocsUtf8))
            {
                propertyValidator = __CorvusValidateExternalDocs;
                return true;
            }
            else if (property.NameEquals(JsonPropertyNames.ServersUtf8))
            {
                propertyValidator = __CorvusValidateServers;
                return true;
            }
            else if (property.NameEquals(JsonPropertyNames.SecurityUtf8))
            {
                propertyValidator = __CorvusValidateSecurity;
                return true;
            }
            else if (property.NameEquals(JsonPropertyNames.TagsUtf8))
            {
                propertyValidator = __CorvusValidateTags;
                return true;
            }
            else if (property.NameEquals(JsonPropertyNames.ComponentsValueUtf8))
            {
                propertyValidator = __CorvusValidateComponentsValue;
                return true;
            }
        }
        else
        {
            if (property.NameEquals(JsonPropertyNames.Openapi))
            {
                propertyValidator = __CorvusValidateOpenapi;
                return true;
            }
            else if (property.NameEquals(JsonPropertyNames.InfoValue))
            {
                propertyValidator = __CorvusValidateInfoValue;
                return true;
            }
            else if (property.NameEquals(JsonPropertyNames.PathsValue))
            {
                propertyValidator = __CorvusValidatePathsValue;
                return true;
            }
            else if (property.NameEquals(JsonPropertyNames.ExternalDocs))
            {
                propertyValidator = __CorvusValidateExternalDocs;
                return true;
            }
            else if (property.NameEquals(JsonPropertyNames.Servers))
            {
                propertyValidator = __CorvusValidateServers;
                return true;
            }
            else if (property.NameEquals(JsonPropertyNames.Security))
            {
                propertyValidator = __CorvusValidateSecurity;
                return true;
            }
            else if (property.NameEquals(JsonPropertyNames.Tags))
            {
                propertyValidator = __CorvusValidateTags;
                return true;
            }
            else if (property.NameEquals(JsonPropertyNames.ComponentsValue))
            {
                propertyValidator = __CorvusValidateComponentsValue;
                return true;
            }
        }

        propertyValidator = null;
        return false;
    }
}