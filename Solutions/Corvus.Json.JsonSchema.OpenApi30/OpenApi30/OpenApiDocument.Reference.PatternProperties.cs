//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Runtime.CompilerServices;
using System.Text.Json;
using System.Text.RegularExpressions;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Corvus.Json.JsonSchema.OpenApi30;
public readonly partial struct OpenApiDocument
{
    /// <summary>
    /// Generated from JSON Schema.
    /// </summary>
    public readonly partial struct Reference
    {
        /// <summary>
        /// A pattern property matching ^\\$ref$ producing a <see cref = "Corvus.Json.JsonUriReference"/>.
        /// </summary>
        public static Regex PatternPropertyJsonUriReference => new("^\\$ref$", RegexOptions.Compiled, TimeSpan.FromSeconds(1));

        private static readonly ImmutableDictionary<Regex, PatternPropertyValidator> __CorvusPatternProperties = CreatePatternPropertiesValidators();
        /// <summary>
        /// Determines if a property matches ^\\$ref$ producing a <see cref = "Corvus.Json.JsonUriReference"/>.
        /// </summary>
        public bool MatchesPatternJsonUriReference(in JsonObjectProperty property)
        {
            return property.Name.IsMatch(PatternPropertyJsonUriReference);
        }

        /// <summary>
        /// Get a property value as the type matching the given pattern property ^\\$ref$ as a <see cref = "Corvus.Json.JsonUriReference"/>.
        /// </summary>
        public bool TryAsPatternJsonUriReference(in JsonObjectProperty property, out Corvus.Json.JsonUriReference result)
        {
            if (property.Name.IsMatch(PatternPropertyJsonUriReference))
            {
                result = property.ValueAs<Corvus.Json.JsonUriReference>();
                return true;
            }
            else
            {
                result = Corvus.Json.JsonUriReference.Undefined;
                return false;
            }
        }

        /// <summary>
        /// Try to get a property value as the type matching the given pattern property ^\\$ref$ as a <see cref = "Corvus.Json.JsonUriReference"/>.
        /// </summary>
        public Corvus.Json.JsonUriReference AsPatternJsonUriReference(in JsonObjectProperty property)
        {
            return property.ValueAs<Corvus.Json.JsonUriReference>();
        }

        private static ImmutableDictionary<Regex, PatternPropertyValidator> CreatePatternPropertiesValidators()
        {
            ImmutableDictionary<Regex, PatternPropertyValidator>.Builder builder = ImmutableDictionary.CreateBuilder<Regex, PatternPropertyValidator>();
            builder.Add(PatternPropertyJsonUriReference, __CorvusValidatePatternPropertyJsonUriReference);
            return builder.ToImmutable();
        }

        private static ValidationContext __CorvusValidatePatternPropertyJsonUriReference(in JsonObjectProperty that, in ValidationContext validationContext, ValidationLevel level)
        {
            return that.ValueAs<Corvus.Json.JsonUriReference>().Validate(validationContext, level);
        }
    }
}