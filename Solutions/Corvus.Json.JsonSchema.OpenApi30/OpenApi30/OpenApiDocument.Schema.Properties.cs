//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Corvus.Json.JsonSchema.OpenApi30;
public readonly partial struct OpenApiDocument
{
    /// <summary>
    /// Generated from JSON Schema.
    /// </summary>
    public readonly partial struct Schema
    {
        /// <summary>
        /// The well-known property names in the JSON object.
        /// </summary>
        public static class JsonPropertyNames
        {
            /// <summary>
            /// JSON property name for <see cref = "AdditionalProperties"/>.
            /// </summary>
            public static ReadOnlySpan<byte> AdditionalPropertiesUtf8 => "additionalProperties"u8;

            /// <summary>
            /// JSON property name for <see cref = "AdditionalProperties"/>.
            /// </summary>
            public const string AdditionalProperties = "additionalProperties";
            /// <summary>
            /// JSON property name for <see cref = "AllOf"/>.
            /// </summary>
            public static ReadOnlySpan<byte> AllOfUtf8 => "allOf"u8;

            /// <summary>
            /// JSON property name for <see cref = "AllOf"/>.
            /// </summary>
            public const string AllOf = "allOf";
            /// <summary>
            /// JSON property name for <see cref = "AnyOf"/>.
            /// </summary>
            public static ReadOnlySpan<byte> AnyOfUtf8 => "anyOf"u8;

            /// <summary>
            /// JSON property name for <see cref = "AnyOf"/>.
            /// </summary>
            public const string AnyOf = "anyOf";
            /// <summary>
            /// JSON property name for <see cref = "Default"/>.
            /// </summary>
            public static ReadOnlySpan<byte> DefaultUtf8 => "default"u8;

            /// <summary>
            /// JSON property name for <see cref = "Default"/>.
            /// </summary>
            public const string Default = "default";
            /// <summary>
            /// JSON property name for <see cref = "Deprecated"/>.
            /// </summary>
            public static ReadOnlySpan<byte> DeprecatedUtf8 => "deprecated"u8;

            /// <summary>
            /// JSON property name for <see cref = "Deprecated"/>.
            /// </summary>
            public const string Deprecated = "deprecated";
            /// <summary>
            /// JSON property name for <see cref = "Description"/>.
            /// </summary>
            public static ReadOnlySpan<byte> DescriptionUtf8 => "description"u8;

            /// <summary>
            /// JSON property name for <see cref = "Description"/>.
            /// </summary>
            public const string Description = "description";
            /// <summary>
            /// JSON property name for <see cref = "Discriminator"/>.
            /// </summary>
            public static ReadOnlySpan<byte> DiscriminatorUtf8 => "discriminator"u8;

            /// <summary>
            /// JSON property name for <see cref = "Discriminator"/>.
            /// </summary>
            public const string Discriminator = "discriminator";
            /// <summary>
            /// JSON property name for <see cref = "Enum"/>.
            /// </summary>
            public static ReadOnlySpan<byte> EnumUtf8 => "enum"u8;

            /// <summary>
            /// JSON property name for <see cref = "Enum"/>.
            /// </summary>
            public const string Enum = "enum";
            /// <summary>
            /// JSON property name for <see cref = "Example"/>.
            /// </summary>
            public static ReadOnlySpan<byte> ExampleUtf8 => "example"u8;

            /// <summary>
            /// JSON property name for <see cref = "Example"/>.
            /// </summary>
            public const string Example = "example";
            /// <summary>
            /// JSON property name for <see cref = "ExclusiveMaximum"/>.
            /// </summary>
            public static ReadOnlySpan<byte> ExclusiveMaximumUtf8 => "exclusiveMaximum"u8;

            /// <summary>
            /// JSON property name for <see cref = "ExclusiveMaximum"/>.
            /// </summary>
            public const string ExclusiveMaximum = "exclusiveMaximum";
            /// <summary>
            /// JSON property name for <see cref = "ExclusiveMinimum"/>.
            /// </summary>
            public static ReadOnlySpan<byte> ExclusiveMinimumUtf8 => "exclusiveMinimum"u8;

            /// <summary>
            /// JSON property name for <see cref = "ExclusiveMinimum"/>.
            /// </summary>
            public const string ExclusiveMinimum = "exclusiveMinimum";
            /// <summary>
            /// JSON property name for <see cref = "ExternalDocs"/>.
            /// </summary>
            public static ReadOnlySpan<byte> ExternalDocsUtf8 => "externalDocs"u8;

            /// <summary>
            /// JSON property name for <see cref = "ExternalDocs"/>.
            /// </summary>
            public const string ExternalDocs = "externalDocs";
            /// <summary>
            /// JSON property name for <see cref = "Format"/>.
            /// </summary>
            public static ReadOnlySpan<byte> FormatUtf8 => "format"u8;

            /// <summary>
            /// JSON property name for <see cref = "Format"/>.
            /// </summary>
            public const string Format = "format";
            /// <summary>
            /// JSON property name for <see cref = "Items"/>.
            /// </summary>
            public static ReadOnlySpan<byte> ItemsUtf8 => "items"u8;

            /// <summary>
            /// JSON property name for <see cref = "Items"/>.
            /// </summary>
            public const string Items = "items";
            /// <summary>
            /// JSON property name for <see cref = "Maximum"/>.
            /// </summary>
            public static ReadOnlySpan<byte> MaximumUtf8 => "maximum"u8;

            /// <summary>
            /// JSON property name for <see cref = "Maximum"/>.
            /// </summary>
            public const string Maximum = "maximum";
            /// <summary>
            /// JSON property name for <see cref = "MaxItems"/>.
            /// </summary>
            public static ReadOnlySpan<byte> MaxItemsUtf8 => "maxItems"u8;

            /// <summary>
            /// JSON property name for <see cref = "MaxItems"/>.
            /// </summary>
            public const string MaxItems = "maxItems";
            /// <summary>
            /// JSON property name for <see cref = "MaxLength"/>.
            /// </summary>
            public static ReadOnlySpan<byte> MaxLengthUtf8 => "maxLength"u8;

            /// <summary>
            /// JSON property name for <see cref = "MaxLength"/>.
            /// </summary>
            public const string MaxLength = "maxLength";
            /// <summary>
            /// JSON property name for <see cref = "MaxProperties"/>.
            /// </summary>
            public static ReadOnlySpan<byte> MaxPropertiesUtf8 => "maxProperties"u8;

            /// <summary>
            /// JSON property name for <see cref = "MaxProperties"/>.
            /// </summary>
            public const string MaxProperties = "maxProperties";
            /// <summary>
            /// JSON property name for <see cref = "Minimum"/>.
            /// </summary>
            public static ReadOnlySpan<byte> MinimumUtf8 => "minimum"u8;

            /// <summary>
            /// JSON property name for <see cref = "Minimum"/>.
            /// </summary>
            public const string Minimum = "minimum";
            /// <summary>
            /// JSON property name for <see cref = "MinItems"/>.
            /// </summary>
            public static ReadOnlySpan<byte> MinItemsUtf8 => "minItems"u8;

            /// <summary>
            /// JSON property name for <see cref = "MinItems"/>.
            /// </summary>
            public const string MinItems = "minItems";
            /// <summary>
            /// JSON property name for <see cref = "MinLength"/>.
            /// </summary>
            public static ReadOnlySpan<byte> MinLengthUtf8 => "minLength"u8;

            /// <summary>
            /// JSON property name for <see cref = "MinLength"/>.
            /// </summary>
            public const string MinLength = "minLength";
            /// <summary>
            /// JSON property name for <see cref = "MinProperties"/>.
            /// </summary>
            public static ReadOnlySpan<byte> MinPropertiesUtf8 => "minProperties"u8;

            /// <summary>
            /// JSON property name for <see cref = "MinProperties"/>.
            /// </summary>
            public const string MinProperties = "minProperties";
            /// <summary>
            /// JSON property name for <see cref = "MultipleOf"/>.
            /// </summary>
            public static ReadOnlySpan<byte> MultipleOfUtf8 => "multipleOf"u8;

            /// <summary>
            /// JSON property name for <see cref = "MultipleOf"/>.
            /// </summary>
            public const string MultipleOf = "multipleOf";
            /// <summary>
            /// JSON property name for <see cref = "Not"/>.
            /// </summary>
            public static ReadOnlySpan<byte> NotUtf8 => "not"u8;

            /// <summary>
            /// JSON property name for <see cref = "Not"/>.
            /// </summary>
            public const string Not = "not";
            /// <summary>
            /// JSON property name for <see cref = "Nullable"/>.
            /// </summary>
            public static ReadOnlySpan<byte> NullableUtf8 => "nullable"u8;

            /// <summary>
            /// JSON property name for <see cref = "Nullable"/>.
            /// </summary>
            public const string Nullable = "nullable";
            /// <summary>
            /// JSON property name for <see cref = "OneOf"/>.
            /// </summary>
            public static ReadOnlySpan<byte> OneOfUtf8 => "oneOf"u8;

            /// <summary>
            /// JSON property name for <see cref = "OneOf"/>.
            /// </summary>
            public const string OneOf = "oneOf";
            /// <summary>
            /// JSON property name for <see cref = "Pattern"/>.
            /// </summary>
            public static ReadOnlySpan<byte> PatternUtf8 => "pattern"u8;

            /// <summary>
            /// JSON property name for <see cref = "Pattern"/>.
            /// </summary>
            public const string Pattern = "pattern";
            /// <summary>
            /// JSON property name for <see cref = "Properties"/>.
            /// </summary>
            public static ReadOnlySpan<byte> PropertiesUtf8 => "properties"u8;

            /// <summary>
            /// JSON property name for <see cref = "Properties"/>.
            /// </summary>
            public const string Properties = "properties";
            /// <summary>
            /// JSON property name for <see cref = "ReadOnly"/>.
            /// </summary>
            public static ReadOnlySpan<byte> ReadOnlyUtf8 => "readOnly"u8;

            /// <summary>
            /// JSON property name for <see cref = "ReadOnly"/>.
            /// </summary>
            public const string ReadOnly = "readOnly";
            /// <summary>
            /// JSON property name for <see cref = "Required"/>.
            /// </summary>
            public static ReadOnlySpan<byte> RequiredUtf8 => "required"u8;

            /// <summary>
            /// JSON property name for <see cref = "Required"/>.
            /// </summary>
            public const string Required = "required";
            /// <summary>
            /// JSON property name for <see cref = "Title"/>.
            /// </summary>
            public static ReadOnlySpan<byte> TitleUtf8 => "title"u8;

            /// <summary>
            /// JSON property name for <see cref = "Title"/>.
            /// </summary>
            public const string Title = "title";
            /// <summary>
            /// JSON property name for <see cref = "Type"/>.
            /// </summary>
            public static ReadOnlySpan<byte> TypeUtf8 => "type"u8;

            /// <summary>
            /// JSON property name for <see cref = "Type"/>.
            /// </summary>
            public const string Type = "type";
            /// <summary>
            /// JSON property name for <see cref = "UniqueItems"/>.
            /// </summary>
            public static ReadOnlySpan<byte> UniqueItemsUtf8 => "uniqueItems"u8;

            /// <summary>
            /// JSON property name for <see cref = "UniqueItems"/>.
            /// </summary>
            public const string UniqueItems = "uniqueItems";
            /// <summary>
            /// JSON property name for <see cref = "WriteOnly"/>.
            /// </summary>
            public static ReadOnlySpan<byte> WriteOnlyUtf8 => "writeOnly"u8;

            /// <summary>
            /// JSON property name for <see cref = "WriteOnly"/>.
            /// </summary>
            public const string WriteOnly = "writeOnly";
            /// <summary>
            /// JSON property name for <see cref = "Xml"/>.
            /// </summary>
            public static ReadOnlySpan<byte> XmlUtf8 => "xml"u8;

            /// <summary>
            /// JSON property name for <see cref = "Xml"/>.
            /// </summary>
            public const string Xml = "xml";
        }

        /// <summary>
        /// Gets the (optional) <c>additionalProperties</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AdditionalPropertiesEntity AdditionalProperties
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.AdditionalPropertiesUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AdditionalPropertiesEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.AdditionalProperties, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AdditionalPropertiesEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>allOf</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AllOfEntityArray AllOf
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.AllOfUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AllOfEntityArray(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.AllOf, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AllOfEntityArray>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>anyOf</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AnyOfEntityArray AnyOf
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.AnyOfUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AnyOfEntityArray(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.AnyOf, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AnyOfEntityArray>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>default</c> property.
        /// </summary>
        public Corvus.Json.JsonAny Default
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.DefaultUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonAny(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Default, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonAny>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>deprecated</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.DeprecatedEntity Deprecated
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.DeprecatedUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.DeprecatedEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Deprecated, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.DeprecatedEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>description</c> property.
        /// </summary>
        public Corvus.Json.JsonString Description
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.DescriptionUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonString(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Description, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonString>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>discriminator</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Discriminator Discriminator
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.DiscriminatorUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Discriminator(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Discriminator, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Discriminator>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>enum</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.JsonAnyArray Enum
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.EnumUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.JsonAnyArray(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Enum, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.JsonAnyArray>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>example</c> property.
        /// </summary>
        public Corvus.Json.JsonAny Example
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.ExampleUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonAny(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Example, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonAny>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>exclusiveMaximum</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ExclusiveMaximumEntity ExclusiveMaximum
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.ExclusiveMaximumUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ExclusiveMaximumEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.ExclusiveMaximum, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ExclusiveMaximumEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>exclusiveMinimum</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ExclusiveMinimumEntity ExclusiveMinimum
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.ExclusiveMinimumUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ExclusiveMinimumEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.ExclusiveMinimum, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ExclusiveMinimumEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>externalDocs</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ExternalDocumentation ExternalDocs
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.ExternalDocsUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ExternalDocumentation(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.ExternalDocs, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ExternalDocumentation>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>format</c> property.
        /// </summary>
        public Corvus.Json.JsonString Format
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.FormatUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonString(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Format, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonString>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>items</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ItemsEntity Items
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.ItemsUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ItemsEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Items, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ItemsEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>maximum</c> property.
        /// </summary>
        public Corvus.Json.JsonNumber Maximum
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.MaximumUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonNumber(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Maximum, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonNumber>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>maxItems</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxItemsEntity MaxItems
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.MaxItemsUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxItemsEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.MaxItems, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxItemsEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>maxLength</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxLengthEntity MaxLength
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.MaxLengthUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxLengthEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.MaxLength, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxLengthEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>maxProperties</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxPropertiesEntity MaxProperties
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.MaxPropertiesUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxPropertiesEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.MaxProperties, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxPropertiesEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>minimum</c> property.
        /// </summary>
        public Corvus.Json.JsonNumber Minimum
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.MinimumUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonNumber(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Minimum, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonNumber>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>minItems</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinItemsEntity MinItems
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.MinItemsUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinItemsEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.MinItems, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinItemsEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>minLength</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinLengthEntity MinLength
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.MinLengthUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinLengthEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.MinLength, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinLengthEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>minProperties</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinPropertiesEntity MinProperties
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.MinPropertiesUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinPropertiesEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.MinProperties, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinPropertiesEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>multipleOf</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MultipleOfEntity MultipleOf
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.MultipleOfUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MultipleOfEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.MultipleOf, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MultipleOfEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>not</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.NotEntity Not
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.NotUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.NotEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Not, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.NotEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>nullable</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.NullableEntity Nullable
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.NullableUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.NullableEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Nullable, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.NullableEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>oneOf</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.OneOfEntityArray OneOf
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.OneOfUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.OneOfEntityArray(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.OneOf, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.OneOfEntityArray>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>pattern</c> property.
        /// </summary>
        public Corvus.Json.JsonRegex Pattern
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.PatternUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonRegex(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Pattern, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonRegex>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>properties</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.PropertiesEntity Properties
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.PropertiesUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.PropertiesEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Properties, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.PropertiesEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>readOnly</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ReadOnlyEntity ReadOnly
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.ReadOnlyUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ReadOnlyEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.ReadOnly, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ReadOnlyEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>required</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.JsonStringArray Required
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.RequiredUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.JsonStringArray(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Required, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.JsonStringArray>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>title</c> property.
        /// </summary>
        public Corvus.Json.JsonString Title
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.TitleUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonString(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Title, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonString>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>type</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.TypeEntity Type
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.TypeUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.TypeEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Type, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.TypeEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>uniqueItems</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.UniqueItemsEntity UniqueItems
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.UniqueItemsUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.UniqueItemsEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.UniqueItems, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.UniqueItemsEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>writeOnly</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.WriteOnlyEntity WriteOnly
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.WriteOnlyUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.WriteOnlyEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.WriteOnly, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.WriteOnlyEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>xml</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Xml Xml
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.XmlUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Xml(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Xml, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Xml>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Creates an instance of a <see cref = "Schema"/>.
        /// </summary>
        public static Schema Create(Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AdditionalPropertiesEntity? additionalProperties = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AllOfEntityArray? allOf = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AnyOfEntityArray? anyOf = null, Corvus.Json.JsonAny? @default = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.DeprecatedEntity? deprecated = null, Corvus.Json.JsonString? description = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Discriminator? discriminator = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.JsonAnyArray? @enum = null, Corvus.Json.JsonAny? example = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ExclusiveMaximumEntity? exclusiveMaximum = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ExclusiveMinimumEntity? exclusiveMinimum = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ExternalDocumentation? externalDocs = null, Corvus.Json.JsonString? format = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ItemsEntity? items = null, Corvus.Json.JsonNumber? maximum = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxItemsEntity? maxItems = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxLengthEntity? maxLength = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxPropertiesEntity? maxProperties = null, Corvus.Json.JsonNumber? minimum = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinItemsEntity? minItems = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinLengthEntity? minLength = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinPropertiesEntity? minProperties = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MultipleOfEntity? multipleOf = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.NotEntity? not = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.NullableEntity? nullable = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.OneOfEntityArray? oneOf = null, Corvus.Json.JsonRegex? pattern = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.PropertiesEntity? properties = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ReadOnlyEntity? readOnly = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.JsonStringArray? required = null, Corvus.Json.JsonString? title = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.TypeEntity? type = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.UniqueItemsEntity? uniqueItems = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.WriteOnlyEntity? writeOnly = null, Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Xml? xml = null)
        {
            var builder = ImmutableList.CreateBuilder<JsonObjectProperty>();
            if (additionalProperties is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AdditionalPropertiesEntity additionalProperties__)
            {
                builder.Add(JsonPropertyNames.AdditionalProperties, additionalProperties__.AsAny);
            }

            if (allOf is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AllOfEntityArray allOf__)
            {
                builder.Add(JsonPropertyNames.AllOf, allOf__.AsAny);
            }

            if (anyOf is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AnyOfEntityArray anyOf__)
            {
                builder.Add(JsonPropertyNames.AnyOf, anyOf__.AsAny);
            }

            if (@default is Corvus.Json.JsonAny @default__)
            {
                builder.Add(JsonPropertyNames.Default, @default__.AsAny);
            }

            if (deprecated is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.DeprecatedEntity deprecated__)
            {
                builder.Add(JsonPropertyNames.Deprecated, deprecated__.AsAny);
            }

            if (description is Corvus.Json.JsonString description__)
            {
                builder.Add(JsonPropertyNames.Description, description__.AsAny);
            }

            if (discriminator is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Discriminator discriminator__)
            {
                builder.Add(JsonPropertyNames.Discriminator, discriminator__.AsAny);
            }

            if (@enum is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.JsonAnyArray @enum__)
            {
                builder.Add(JsonPropertyNames.Enum, @enum__.AsAny);
            }

            if (example is Corvus.Json.JsonAny example__)
            {
                builder.Add(JsonPropertyNames.Example, example__.AsAny);
            }

            if (exclusiveMaximum is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ExclusiveMaximumEntity exclusiveMaximum__)
            {
                builder.Add(JsonPropertyNames.ExclusiveMaximum, exclusiveMaximum__.AsAny);
            }

            if (exclusiveMinimum is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ExclusiveMinimumEntity exclusiveMinimum__)
            {
                builder.Add(JsonPropertyNames.ExclusiveMinimum, exclusiveMinimum__.AsAny);
            }

            if (externalDocs is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ExternalDocumentation externalDocs__)
            {
                builder.Add(JsonPropertyNames.ExternalDocs, externalDocs__.AsAny);
            }

            if (format is Corvus.Json.JsonString format__)
            {
                builder.Add(JsonPropertyNames.Format, format__.AsAny);
            }

            if (items is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ItemsEntity items__)
            {
                builder.Add(JsonPropertyNames.Items, items__.AsAny);
            }

            if (maximum is Corvus.Json.JsonNumber maximum__)
            {
                builder.Add(JsonPropertyNames.Maximum, maximum__.AsAny);
            }

            if (maxItems is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxItemsEntity maxItems__)
            {
                builder.Add(JsonPropertyNames.MaxItems, maxItems__.AsAny);
            }

            if (maxLength is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxLengthEntity maxLength__)
            {
                builder.Add(JsonPropertyNames.MaxLength, maxLength__.AsAny);
            }

            if (maxProperties is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxPropertiesEntity maxProperties__)
            {
                builder.Add(JsonPropertyNames.MaxProperties, maxProperties__.AsAny);
            }

            if (minimum is Corvus.Json.JsonNumber minimum__)
            {
                builder.Add(JsonPropertyNames.Minimum, minimum__.AsAny);
            }

            if (minItems is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinItemsEntity minItems__)
            {
                builder.Add(JsonPropertyNames.MinItems, minItems__.AsAny);
            }

            if (minLength is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinLengthEntity minLength__)
            {
                builder.Add(JsonPropertyNames.MinLength, minLength__.AsAny);
            }

            if (minProperties is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinPropertiesEntity minProperties__)
            {
                builder.Add(JsonPropertyNames.MinProperties, minProperties__.AsAny);
            }

            if (multipleOf is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MultipleOfEntity multipleOf__)
            {
                builder.Add(JsonPropertyNames.MultipleOf, multipleOf__.AsAny);
            }

            if (not is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.NotEntity not__)
            {
                builder.Add(JsonPropertyNames.Not, not__.AsAny);
            }

            if (nullable is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.NullableEntity nullable__)
            {
                builder.Add(JsonPropertyNames.Nullable, nullable__.AsAny);
            }

            if (oneOf is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.OneOfEntityArray oneOf__)
            {
                builder.Add(JsonPropertyNames.OneOf, oneOf__.AsAny);
            }

            if (pattern is Corvus.Json.JsonRegex pattern__)
            {
                builder.Add(JsonPropertyNames.Pattern, pattern__.AsAny);
            }

            if (properties is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.PropertiesEntity properties__)
            {
                builder.Add(JsonPropertyNames.Properties, properties__.AsAny);
            }

            if (readOnly is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ReadOnlyEntity readOnly__)
            {
                builder.Add(JsonPropertyNames.ReadOnly, readOnly__.AsAny);
            }

            if (required is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.JsonStringArray required__)
            {
                builder.Add(JsonPropertyNames.Required, required__.AsAny);
            }

            if (title is Corvus.Json.JsonString title__)
            {
                builder.Add(JsonPropertyNames.Title, title__.AsAny);
            }

            if (type is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.TypeEntity type__)
            {
                builder.Add(JsonPropertyNames.Type, type__.AsAny);
            }

            if (uniqueItems is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.UniqueItemsEntity uniqueItems__)
            {
                builder.Add(JsonPropertyNames.UniqueItems, uniqueItems__.AsAny);
            }

            if (writeOnly is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.WriteOnlyEntity writeOnly__)
            {
                builder.Add(JsonPropertyNames.WriteOnly, writeOnly__.AsAny);
            }

            if (xml is Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Xml xml__)
            {
                builder.Add(JsonPropertyNames.Xml, xml__.AsAny);
            }

            return new(builder.ToImmutable());
        }

        /// <summary>
        /// Sets additionalProperties.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithAdditionalProperties(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AdditionalPropertiesEntity value)
        {
            return this.SetProperty(JsonPropertyNames.AdditionalProperties, value);
        }

        /// <summary>
        /// Sets allOf.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithAllOf(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AllOfEntityArray value)
        {
            return this.SetProperty(JsonPropertyNames.AllOf, value);
        }

        /// <summary>
        /// Sets anyOf.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithAnyOf(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AnyOfEntityArray value)
        {
            return this.SetProperty(JsonPropertyNames.AnyOf, value);
        }

        /// <summary>
        /// Sets default.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithDefault(in Corvus.Json.JsonAny value)
        {
            return this.SetProperty(JsonPropertyNames.Default, value);
        }

        /// <summary>
        /// Sets deprecated.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithDeprecated(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.DeprecatedEntity value)
        {
            return this.SetProperty(JsonPropertyNames.Deprecated, value);
        }

        /// <summary>
        /// Sets description.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithDescription(in Corvus.Json.JsonString value)
        {
            return this.SetProperty(JsonPropertyNames.Description, value);
        }

        /// <summary>
        /// Sets discriminator.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithDiscriminator(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Discriminator value)
        {
            return this.SetProperty(JsonPropertyNames.Discriminator, value);
        }

        /// <summary>
        /// Sets enum.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithEnum(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.JsonAnyArray value)
        {
            return this.SetProperty(JsonPropertyNames.Enum, value);
        }

        /// <summary>
        /// Sets example.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithExample(in Corvus.Json.JsonAny value)
        {
            return this.SetProperty(JsonPropertyNames.Example, value);
        }

        /// <summary>
        /// Sets exclusiveMaximum.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithExclusiveMaximum(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ExclusiveMaximumEntity value)
        {
            return this.SetProperty(JsonPropertyNames.ExclusiveMaximum, value);
        }

        /// <summary>
        /// Sets exclusiveMinimum.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithExclusiveMinimum(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ExclusiveMinimumEntity value)
        {
            return this.SetProperty(JsonPropertyNames.ExclusiveMinimum, value);
        }

        /// <summary>
        /// Sets externalDocs.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithExternalDocs(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ExternalDocumentation value)
        {
            return this.SetProperty(JsonPropertyNames.ExternalDocs, value);
        }

        /// <summary>
        /// Sets format.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithFormat(in Corvus.Json.JsonString value)
        {
            return this.SetProperty(JsonPropertyNames.Format, value);
        }

        /// <summary>
        /// Sets items.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithItems(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ItemsEntity value)
        {
            return this.SetProperty(JsonPropertyNames.Items, value);
        }

        /// <summary>
        /// Sets maximum.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithMaximum(in Corvus.Json.JsonNumber value)
        {
            return this.SetProperty(JsonPropertyNames.Maximum, value);
        }

        /// <summary>
        /// Sets maxItems.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithMaxItems(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxItemsEntity value)
        {
            return this.SetProperty(JsonPropertyNames.MaxItems, value);
        }

        /// <summary>
        /// Sets maxLength.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithMaxLength(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxLengthEntity value)
        {
            return this.SetProperty(JsonPropertyNames.MaxLength, value);
        }

        /// <summary>
        /// Sets maxProperties.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithMaxProperties(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxPropertiesEntity value)
        {
            return this.SetProperty(JsonPropertyNames.MaxProperties, value);
        }

        /// <summary>
        /// Sets minimum.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithMinimum(in Corvus.Json.JsonNumber value)
        {
            return this.SetProperty(JsonPropertyNames.Minimum, value);
        }

        /// <summary>
        /// Sets minItems.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithMinItems(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinItemsEntity value)
        {
            return this.SetProperty(JsonPropertyNames.MinItems, value);
        }

        /// <summary>
        /// Sets minLength.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithMinLength(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinLengthEntity value)
        {
            return this.SetProperty(JsonPropertyNames.MinLength, value);
        }

        /// <summary>
        /// Sets minProperties.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithMinProperties(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinPropertiesEntity value)
        {
            return this.SetProperty(JsonPropertyNames.MinProperties, value);
        }

        /// <summary>
        /// Sets multipleOf.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithMultipleOf(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MultipleOfEntity value)
        {
            return this.SetProperty(JsonPropertyNames.MultipleOf, value);
        }

        /// <summary>
        /// Sets not.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithNot(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.NotEntity value)
        {
            return this.SetProperty(JsonPropertyNames.Not, value);
        }

        /// <summary>
        /// Sets nullable.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithNullable(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.NullableEntity value)
        {
            return this.SetProperty(JsonPropertyNames.Nullable, value);
        }

        /// <summary>
        /// Sets oneOf.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithOneOf(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.OneOfEntityArray value)
        {
            return this.SetProperty(JsonPropertyNames.OneOf, value);
        }

        /// <summary>
        /// Sets pattern.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithPattern(in Corvus.Json.JsonRegex value)
        {
            return this.SetProperty(JsonPropertyNames.Pattern, value);
        }

        /// <summary>
        /// Sets properties.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithProperties(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.PropertiesEntity value)
        {
            return this.SetProperty(JsonPropertyNames.Properties, value);
        }

        /// <summary>
        /// Sets readOnly.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithReadOnly(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ReadOnlyEntity value)
        {
            return this.SetProperty(JsonPropertyNames.ReadOnly, value);
        }

        /// <summary>
        /// Sets required.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithRequired(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.JsonStringArray value)
        {
            return this.SetProperty(JsonPropertyNames.Required, value);
        }

        /// <summary>
        /// Sets title.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithTitle(in Corvus.Json.JsonString value)
        {
            return this.SetProperty(JsonPropertyNames.Title, value);
        }

        /// <summary>
        /// Sets type.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithType(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.TypeEntity value)
        {
            return this.SetProperty(JsonPropertyNames.Type, value);
        }

        /// <summary>
        /// Sets uniqueItems.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithUniqueItems(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.UniqueItemsEntity value)
        {
            return this.SetProperty(JsonPropertyNames.UniqueItems, value);
        }

        /// <summary>
        /// Sets writeOnly.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithWriteOnly(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.WriteOnlyEntity value)
        {
            return this.SetProperty(JsonPropertyNames.WriteOnly, value);
        }

        /// <summary>
        /// Sets xml.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Schema WithXml(in Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Xml value)
        {
            return this.SetProperty(JsonPropertyNames.Xml, value);
        }

        private static ValidationContext __CorvusValidateTitle(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateMultipleOf(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MultipleOfEntity>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateMaximum(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonNumber>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateExclusiveMaximum(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ExclusiveMaximumEntity>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateMinimum(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonNumber>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateExclusiveMinimum(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ExclusiveMinimumEntity>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateMaxLength(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxLengthEntity>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateMinLength(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinLengthEntity>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidatePattern(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonRegex>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateMaxItems(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxItemsEntity>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateMinItems(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinItemsEntity>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateUniqueItems(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.UniqueItemsEntity>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateMaxProperties(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MaxPropertiesEntity>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateMinProperties(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.MinPropertiesEntity>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateRequired(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.JsonStringArray>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateEnum(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.JsonAnyArray>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateType(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.TypeEntity>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateNot(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.NotEntity>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateAllOf(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AllOfEntityArray>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateOneOf(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.OneOfEntityArray>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateAnyOf(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AnyOfEntityArray>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateItems(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ItemsEntity>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateProperties(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.PropertiesEntity>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateAdditionalProperties(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.AdditionalPropertiesEntity>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateDescription(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateFormat(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateDefault(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonAny>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateNullable(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.NullableEntity>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateDiscriminator(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Discriminator>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateReadOnly(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.ReadOnlyEntity>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateWriteOnly(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.WriteOnlyEntity>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateExample(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonAny>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateExternalDocs(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.ExternalDocumentation>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateDeprecated(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Schema.DeprecatedEntity>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateXml(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi30.OpenApiDocument.Xml>().Validate(validationContext, level);
        }

        /// <summary>
        /// Tries to get the validator for the given property.
        /// </summary>
        /// <param name = "property">The property for which to get the validator.</param>
        /// <param name = "hasJsonElementBacking"><c>True</c> if the object containing the property has a JsonElement backing.</param>
        /// <param name = "propertyValidator">The validator for the property, if provided by this schema.</param>
        /// <returns><c>True</c> if the validator was found.</returns>
        private bool __TryGetCorvusLocalPropertiesValidator(in JsonObjectProperty property, bool hasJsonElementBacking, [NotNullWhen(true)] out ObjectPropertyValidator? propertyValidator)
        {
            if (hasJsonElementBacking)
            {
                if (property.NameEquals(JsonPropertyNames.TitleUtf8))
                {
                    propertyValidator = __CorvusValidateTitle;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.MultipleOfUtf8))
                {
                    propertyValidator = __CorvusValidateMultipleOf;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.MaximumUtf8))
                {
                    propertyValidator = __CorvusValidateMaximum;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.ExclusiveMaximumUtf8))
                {
                    propertyValidator = __CorvusValidateExclusiveMaximum;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.MinimumUtf8))
                {
                    propertyValidator = __CorvusValidateMinimum;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.ExclusiveMinimumUtf8))
                {
                    propertyValidator = __CorvusValidateExclusiveMinimum;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.MaxLengthUtf8))
                {
                    propertyValidator = __CorvusValidateMaxLength;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.MinLengthUtf8))
                {
                    propertyValidator = __CorvusValidateMinLength;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.PatternUtf8))
                {
                    propertyValidator = __CorvusValidatePattern;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.MaxItemsUtf8))
                {
                    propertyValidator = __CorvusValidateMaxItems;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.MinItemsUtf8))
                {
                    propertyValidator = __CorvusValidateMinItems;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.UniqueItemsUtf8))
                {
                    propertyValidator = __CorvusValidateUniqueItems;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.MaxPropertiesUtf8))
                {
                    propertyValidator = __CorvusValidateMaxProperties;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.MinPropertiesUtf8))
                {
                    propertyValidator = __CorvusValidateMinProperties;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.RequiredUtf8))
                {
                    propertyValidator = __CorvusValidateRequired;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.EnumUtf8))
                {
                    propertyValidator = __CorvusValidateEnum;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.TypeUtf8))
                {
                    propertyValidator = __CorvusValidateType;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.NotUtf8))
                {
                    propertyValidator = __CorvusValidateNot;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.AllOfUtf8))
                {
                    propertyValidator = __CorvusValidateAllOf;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.OneOfUtf8))
                {
                    propertyValidator = __CorvusValidateOneOf;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.AnyOfUtf8))
                {
                    propertyValidator = __CorvusValidateAnyOf;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.ItemsUtf8))
                {
                    propertyValidator = __CorvusValidateItems;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.PropertiesUtf8))
                {
                    propertyValidator = __CorvusValidateProperties;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.AdditionalPropertiesUtf8))
                {
                    propertyValidator = __CorvusValidateAdditionalProperties;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.DescriptionUtf8))
                {
                    propertyValidator = __CorvusValidateDescription;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.FormatUtf8))
                {
                    propertyValidator = __CorvusValidateFormat;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.DefaultUtf8))
                {
                    propertyValidator = __CorvusValidateDefault;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.NullableUtf8))
                {
                    propertyValidator = __CorvusValidateNullable;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.DiscriminatorUtf8))
                {
                    propertyValidator = __CorvusValidateDiscriminator;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.ReadOnlyUtf8))
                {
                    propertyValidator = __CorvusValidateReadOnly;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.WriteOnlyUtf8))
                {
                    propertyValidator = __CorvusValidateWriteOnly;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.ExampleUtf8))
                {
                    propertyValidator = __CorvusValidateExample;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.ExternalDocsUtf8))
                {
                    propertyValidator = __CorvusValidateExternalDocs;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.DeprecatedUtf8))
                {
                    propertyValidator = __CorvusValidateDeprecated;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.XmlUtf8))
                {
                    propertyValidator = __CorvusValidateXml;
                    return true;
                }
            }
            else
            {
                if (property.NameEquals(JsonPropertyNames.Title))
                {
                    propertyValidator = __CorvusValidateTitle;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.MultipleOf))
                {
                    propertyValidator = __CorvusValidateMultipleOf;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Maximum))
                {
                    propertyValidator = __CorvusValidateMaximum;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.ExclusiveMaximum))
                {
                    propertyValidator = __CorvusValidateExclusiveMaximum;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Minimum))
                {
                    propertyValidator = __CorvusValidateMinimum;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.ExclusiveMinimum))
                {
                    propertyValidator = __CorvusValidateExclusiveMinimum;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.MaxLength))
                {
                    propertyValidator = __CorvusValidateMaxLength;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.MinLength))
                {
                    propertyValidator = __CorvusValidateMinLength;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Pattern))
                {
                    propertyValidator = __CorvusValidatePattern;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.MaxItems))
                {
                    propertyValidator = __CorvusValidateMaxItems;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.MinItems))
                {
                    propertyValidator = __CorvusValidateMinItems;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.UniqueItems))
                {
                    propertyValidator = __CorvusValidateUniqueItems;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.MaxProperties))
                {
                    propertyValidator = __CorvusValidateMaxProperties;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.MinProperties))
                {
                    propertyValidator = __CorvusValidateMinProperties;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Required))
                {
                    propertyValidator = __CorvusValidateRequired;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Enum))
                {
                    propertyValidator = __CorvusValidateEnum;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Type))
                {
                    propertyValidator = __CorvusValidateType;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Not))
                {
                    propertyValidator = __CorvusValidateNot;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.AllOf))
                {
                    propertyValidator = __CorvusValidateAllOf;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.OneOf))
                {
                    propertyValidator = __CorvusValidateOneOf;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.AnyOf))
                {
                    propertyValidator = __CorvusValidateAnyOf;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Items))
                {
                    propertyValidator = __CorvusValidateItems;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Properties))
                {
                    propertyValidator = __CorvusValidateProperties;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.AdditionalProperties))
                {
                    propertyValidator = __CorvusValidateAdditionalProperties;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Description))
                {
                    propertyValidator = __CorvusValidateDescription;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Format))
                {
                    propertyValidator = __CorvusValidateFormat;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Default))
                {
                    propertyValidator = __CorvusValidateDefault;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Nullable))
                {
                    propertyValidator = __CorvusValidateNullable;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Discriminator))
                {
                    propertyValidator = __CorvusValidateDiscriminator;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.ReadOnly))
                {
                    propertyValidator = __CorvusValidateReadOnly;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.WriteOnly))
                {
                    propertyValidator = __CorvusValidateWriteOnly;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Example))
                {
                    propertyValidator = __CorvusValidateExample;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.ExternalDocs))
                {
                    propertyValidator = __CorvusValidateExternalDocs;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Deprecated))
                {
                    propertyValidator = __CorvusValidateDeprecated;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Xml))
                {
                    propertyValidator = __CorvusValidateXml;
                    return true;
                }
            }

            propertyValidator = null;
            return false;
        }
    }
}