//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Corvus.Json.JsonSchema.OpenApi31;
/// <summary>
/// Generated from JSON Schema.
/// </summary>
/// <remarks>
/// <para>
/// The description of OpenAPI v3.1.x documents without schema validation, as defined by https://spec.openapis.org/oas/v3.1.0
/// </para>
/// </remarks>
public readonly partial struct OpenApiDocument
{
    /// <summary>
    /// Matches the value against each of the any of values, and returns the result of calling the provided match function for the first match found.
    /// </summary>
    /// <param name = "context">The context to pass to the match function.</param>
    /// <param name = "match0">The function to call if the value matches the <see cref = "Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.RequiredPaths"/> type.</param>
    /// <param name = "match1">The function to call if the value matches the <see cref = "Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.RequiredComponents"/> type.</param>
    /// <param name = "match2">The function to call if the value matches the <see cref = "Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.RequiredWebhooks"/> type.</param>
    /// <param name = "defaultMatch">The fallback match.</param>
    public TOut Match<TIn, TOut>(in TIn context, Matcher<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.RequiredPaths, TIn, TOut> match0, Matcher<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.RequiredComponents, TIn, TOut> match1, Matcher<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.RequiredWebhooks, TIn, TOut> match2, Matcher<OpenApiDocument, TIn, TOut> defaultMatch)
    {
        var anyOf0 = this.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.RequiredPaths>();
        if (anyOf0.IsValid())
        {
            return match0(anyOf0, context);
        }

        var anyOf1 = this.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.RequiredComponents>();
        if (anyOf1.IsValid())
        {
            return match1(anyOf1, context);
        }

        var anyOf2 = this.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.RequiredWebhooks>();
        if (anyOf2.IsValid())
        {
            return match2(anyOf2, context);
        }

        return defaultMatch(this, context);
    }

    /// <summary>
    /// Matches the value against each of the any of values, and returns the result of calling the provided match function for the first match found.
    /// </summary>
    /// <param name = "match0">The function to call if the value matches the <see cref = "Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.RequiredPaths"/> type.</param>
    /// <param name = "match1">The function to call if the value matches the <see cref = "Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.RequiredComponents"/> type.</param>
    /// <param name = "match2">The function to call if the value matches the <see cref = "Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.RequiredWebhooks"/> type.</param>
    /// <param name = "defaultMatch">The fallback match.</param>
    public TOut Match<TOut>(Matcher<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.RequiredPaths, TOut> match0, Matcher<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.RequiredComponents, TOut> match1, Matcher<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.RequiredWebhooks, TOut> match2, Matcher<OpenApiDocument, TOut> defaultMatch)
    {
        var anyOf0 = this.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.RequiredPaths>();
        if (anyOf0.IsValid())
        {
            return match0(anyOf0);
        }

        var anyOf1 = this.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.RequiredComponents>();
        if (anyOf1.IsValid())
        {
            return match1(anyOf1);
        }

        var anyOf2 = this.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.RequiredWebhooks>();
        if (anyOf2.IsValid())
        {
            return match2(anyOf2);
        }

        return defaultMatch(this);
    }
}