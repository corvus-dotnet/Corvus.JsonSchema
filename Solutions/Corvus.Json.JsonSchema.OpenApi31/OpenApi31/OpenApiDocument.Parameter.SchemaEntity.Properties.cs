//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Corvus.Json.JsonSchema.OpenApi31;
public readonly partial struct OpenApiDocument
{
    public readonly partial struct Parameter
    {
        /// <summary>
        /// Generated from JSON Schema.
        /// </summary>
        public readonly partial struct SchemaEntity
        {
            /// <summary>
            /// The well-known property names in the JSON object.
            /// </summary>
            public static class JsonPropertyNames
            {
                /// <summary>
                /// JSON property name for <see cref = "AllowReserved"/>.
                /// </summary>
                public static ReadOnlySpan<byte> AllowReservedUtf8 => "allowReserved"u8;

                /// <summary>
                /// JSON property name for <see cref = "AllowReserved"/>.
                /// </summary>
                public const string AllowReserved = "allowReserved";
                /// <summary>
                /// JSON property name for <see cref = "Example"/>.
                /// </summary>
                public static ReadOnlySpan<byte> ExampleUtf8 => "example"u8;

                /// <summary>
                /// JSON property name for <see cref = "Example"/>.
                /// </summary>
                public const string Example = "example";
                /// <summary>
                /// JSON property name for <see cref = "Examples"/>.
                /// </summary>
                public static ReadOnlySpan<byte> ExamplesUtf8 => "examples"u8;

                /// <summary>
                /// JSON property name for <see cref = "Examples"/>.
                /// </summary>
                public const string Examples = "examples";
                /// <summary>
                /// JSON property name for <see cref = "Explode"/>.
                /// </summary>
                public static ReadOnlySpan<byte> ExplodeUtf8 => "explode"u8;

                /// <summary>
                /// JSON property name for <see cref = "Explode"/>.
                /// </summary>
                public const string Explode = "explode";
                /// <summary>
                /// JSON property name for <see cref = "Name"/>.
                /// </summary>
                public static ReadOnlySpan<byte> NameUtf8 => "name"u8;

                /// <summary>
                /// JSON property name for <see cref = "Name"/>.
                /// </summary>
                public const string Name = "name";
                /// <summary>
                /// JSON property name for <see cref = "Required"/>.
                /// </summary>
                public static ReadOnlySpan<byte> RequiredUtf8 => "required"u8;

                /// <summary>
                /// JSON property name for <see cref = "Required"/>.
                /// </summary>
                public const string Required = "required";
                /// <summary>
                /// JSON property name for <see cref = "Style"/>.
                /// </summary>
                public static ReadOnlySpan<byte> StyleUtf8 => "style"u8;

                /// <summary>
                /// JSON property name for <see cref = "Style"/>.
                /// </summary>
                public const string Style = "style";
            }

            /// <summary>
            /// Gets the (optional) <c>allowReserved</c> property.
            /// </summary>
            public Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Parameter.SchemaEntity.StylesForQueryEntity.ThenEntity.AllowReservedEntity AllowReserved
            {
                get
                {
                    if ((this.backing & Backing.JsonElement) != 0)
                    {
                        if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                        {
                            return default;
                        }

                        if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.AllowReservedUtf8, out JsonElement result))
                        {
                            return new Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Parameter.SchemaEntity.StylesForQueryEntity.ThenEntity.AllowReservedEntity(result);
                        }
                    }

                    if ((this.backing & Backing.Object) != 0)
                    {
                        if (this.objectBacking.TryGetValue(JsonPropertyNames.AllowReserved, out JsonAny result))
                        {
                            return result.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Parameter.SchemaEntity.StylesForQueryEntity.ThenEntity.AllowReservedEntity>();
                        }
                    }

                    return default;
                }
            }

            /// <summary>
            /// Gets the (optional) <c>example</c> property.
            /// </summary>
            public Corvus.Json.JsonAny Example
            {
                get
                {
                    if ((this.backing & Backing.JsonElement) != 0)
                    {
                        if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                        {
                            return default;
                        }

                        if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.ExampleUtf8, out JsonElement result))
                        {
                            return new Corvus.Json.JsonAny(result);
                        }
                    }

                    if ((this.backing & Backing.Object) != 0)
                    {
                        if (this.objectBacking.TryGetValue(JsonPropertyNames.Example, out JsonAny result))
                        {
                            return result.As<Corvus.Json.JsonAny>();
                        }
                    }

                    return default;
                }
            }

            /// <summary>
            /// Gets the (optional) <c>examples</c> property.
            /// </summary>
            public Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Examples.ExamplesEntity Examples
            {
                get
                {
                    if ((this.backing & Backing.JsonElement) != 0)
                    {
                        if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                        {
                            return default;
                        }

                        if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.ExamplesUtf8, out JsonElement result))
                        {
                            return new Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Examples.ExamplesEntity(result);
                        }
                    }

                    if ((this.backing & Backing.Object) != 0)
                    {
                        if (this.objectBacking.TryGetValue(JsonPropertyNames.Examples, out JsonAny result))
                        {
                            return result.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Examples.ExamplesEntity>();
                        }
                    }

                    return default;
                }
            }

            /// <summary>
            /// Gets the (optional) <c>explode</c> property.
            /// </summary>
            public Corvus.Json.JsonBoolean Explode
            {
                get
                {
                    if ((this.backing & Backing.JsonElement) != 0)
                    {
                        if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                        {
                            return default;
                        }

                        if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.ExplodeUtf8, out JsonElement result))
                        {
                            return new Corvus.Json.JsonBoolean(result);
                        }
                    }

                    if ((this.backing & Backing.Object) != 0)
                    {
                        if (this.objectBacking.TryGetValue(JsonPropertyNames.Explode, out JsonAny result))
                        {
                            return result.As<Corvus.Json.JsonBoolean>();
                        }
                    }

                    return default;
                }
            }

            /// <summary>
            /// Gets the (optional) <c>name</c> property.
            /// </summary>
            public Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Parameter.SchemaEntity.StylesForPathEntity.RequiredRequired.NameEntity Name
            {
                get
                {
                    if ((this.backing & Backing.JsonElement) != 0)
                    {
                        if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                        {
                            return default;
                        }

                        if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.NameUtf8, out JsonElement result))
                        {
                            return new Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Parameter.SchemaEntity.StylesForPathEntity.RequiredRequired.NameEntity(result);
                        }
                    }

                    if ((this.backing & Backing.Object) != 0)
                    {
                        if (this.objectBacking.TryGetValue(JsonPropertyNames.Name, out JsonAny result))
                        {
                            return result.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Parameter.SchemaEntity.StylesForPathEntity.RequiredRequired.NameEntity>();
                        }
                    }

                    return default;
                }
            }

            /// <summary>
            /// Gets the (optional) <c>required</c> property.
            /// </summary>
            public Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Parameter.SchemaEntity.StylesForPathEntity.RequiredRequired.RequiredEntity Required
            {
                get
                {
                    if ((this.backing & Backing.JsonElement) != 0)
                    {
                        if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                        {
                            return default;
                        }

                        if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.RequiredUtf8, out JsonElement result))
                        {
                            return new Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Parameter.SchemaEntity.StylesForPathEntity.RequiredRequired.RequiredEntity(result);
                        }
                    }

                    if ((this.backing & Backing.Object) != 0)
                    {
                        if (this.objectBacking.TryGetValue(JsonPropertyNames.Required, out JsonAny result))
                        {
                            return result.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Parameter.SchemaEntity.StylesForPathEntity.RequiredRequired.RequiredEntity>();
                        }
                    }

                    return default;
                }
            }

            /// <summary>
            /// Gets the (optional) <c>style</c> property.
            /// </summary>
            public Corvus.Json.JsonString Style
            {
                get
                {
                    if ((this.backing & Backing.JsonElement) != 0)
                    {
                        if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                        {
                            return default;
                        }

                        if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.StyleUtf8, out JsonElement result))
                        {
                            return new Corvus.Json.JsonString(result);
                        }
                    }

                    if ((this.backing & Backing.Object) != 0)
                    {
                        if (this.objectBacking.TryGetValue(JsonPropertyNames.Style, out JsonAny result))
                        {
                            return result.As<Corvus.Json.JsonString>();
                        }
                    }

                    return default;
                }
            }

            /// <summary>
            /// Creates an instance of a <see cref = "SchemaEntity"/>.
            /// </summary>
            public static SchemaEntity Create(Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Parameter.SchemaEntity.StylesForQueryEntity.ThenEntity.AllowReservedEntity? allowReserved = null, Corvus.Json.JsonAny? example = null, Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Examples.ExamplesEntity? examples = null, Corvus.Json.JsonBoolean? explode = null, Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Parameter.SchemaEntity.StylesForPathEntity.RequiredRequired.NameEntity? name = null, Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Parameter.SchemaEntity.StylesForPathEntity.RequiredRequired.RequiredEntity? required = null, Corvus.Json.JsonString? style = null)
            {
                var builder = ImmutableList.CreateBuilder<JsonObjectProperty>();
                if (allowReserved is Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Parameter.SchemaEntity.StylesForQueryEntity.ThenEntity.AllowReservedEntity allowReserved__)
                {
                    builder.Add(JsonPropertyNames.AllowReserved, allowReserved__.AsAny);
                }

                if (example is Corvus.Json.JsonAny example__)
                {
                    builder.Add(JsonPropertyNames.Example, example__.AsAny);
                }

                if (examples is Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Examples.ExamplesEntity examples__)
                {
                    builder.Add(JsonPropertyNames.Examples, examples__.AsAny);
                }

                if (explode is Corvus.Json.JsonBoolean explode__)
                {
                    builder.Add(JsonPropertyNames.Explode, explode__.AsAny);
                }

                if (name is Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Parameter.SchemaEntity.StylesForPathEntity.RequiredRequired.NameEntity name__)
                {
                    builder.Add(JsonPropertyNames.Name, name__.AsAny);
                }

                if (required is Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Parameter.SchemaEntity.StylesForPathEntity.RequiredRequired.RequiredEntity required__)
                {
                    builder.Add(JsonPropertyNames.Required, required__.AsAny);
                }

                if (style is Corvus.Json.JsonString style__)
                {
                    builder.Add(JsonPropertyNames.Style, style__.AsAny);
                }

                return new(builder.ToImmutable());
            }

            /// <summary>
            /// Sets allowReserved.
            /// </summary>
            /// <param name = "value">The value to set.</param>
            /// <returns>The entity with the updated property.</returns>
            public SchemaEntity WithAllowReserved(in Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Parameter.SchemaEntity.StylesForQueryEntity.ThenEntity.AllowReservedEntity value)
            {
                return this.SetProperty(JsonPropertyNames.AllowReserved, value);
            }

            /// <summary>
            /// Sets example.
            /// </summary>
            /// <param name = "value">The value to set.</param>
            /// <returns>The entity with the updated property.</returns>
            public SchemaEntity WithExample(in Corvus.Json.JsonAny value)
            {
                return this.SetProperty(JsonPropertyNames.Example, value);
            }

            /// <summary>
            /// Sets examples.
            /// </summary>
            /// <param name = "value">The value to set.</param>
            /// <returns>The entity with the updated property.</returns>
            public SchemaEntity WithExamples(in Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Examples.ExamplesEntity value)
            {
                return this.SetProperty(JsonPropertyNames.Examples, value);
            }

            /// <summary>
            /// Sets explode.
            /// </summary>
            /// <param name = "value">The value to set.</param>
            /// <returns>The entity with the updated property.</returns>
            public SchemaEntity WithExplode(in Corvus.Json.JsonBoolean value)
            {
                return this.SetProperty(JsonPropertyNames.Explode, value);
            }

            /// <summary>
            /// Sets name.
            /// </summary>
            /// <param name = "value">The value to set.</param>
            /// <returns>The entity with the updated property.</returns>
            public SchemaEntity WithName(in Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Parameter.SchemaEntity.StylesForPathEntity.RequiredRequired.NameEntity value)
            {
                return this.SetProperty(JsonPropertyNames.Name, value);
            }

            /// <summary>
            /// Sets style.
            /// </summary>
            /// <param name = "value">The value to set.</param>
            /// <returns>The entity with the updated property.</returns>
            public SchemaEntity WithStyle(in Corvus.Json.JsonString value)
            {
                return this.SetProperty(JsonPropertyNames.Style, value);
            }

            private static ValidationContext __CorvusValidateStyle(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
            {
                return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
            }

            private static ValidationContext __CorvusValidateExplode(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
            {
                return property.ValueAs<Corvus.Json.JsonBoolean>().Validate(validationContext, level);
            }

            /// <summary>
            /// Tries to get the validator for the given property.
            /// </summary>
            /// <param name = "property">The property for which to get the validator.</param>
            /// <param name = "hasJsonElementBacking"><c>True</c> if the object containing the property has a JsonElement backing.</param>
            /// <param name = "propertyValidator">The validator for the property, if provided by this schema.</param>
            /// <returns><c>True</c> if the validator was found.</returns>
            private bool __TryGetCorvusLocalPropertiesValidator(in JsonObjectProperty property, bool hasJsonElementBacking, [NotNullWhen(true)] out ObjectPropertyValidator? propertyValidator)
            {
                if (hasJsonElementBacking)
                {
                    if (property.NameEquals(JsonPropertyNames.StyleUtf8))
                    {
                        propertyValidator = __CorvusValidateStyle;
                        return true;
                    }
                    else if (property.NameEquals(JsonPropertyNames.ExplodeUtf8))
                    {
                        propertyValidator = __CorvusValidateExplode;
                        return true;
                    }
                }
                else
                {
                    if (property.NameEquals(JsonPropertyNames.Style))
                    {
                        propertyValidator = __CorvusValidateStyle;
                        return true;
                    }
                    else if (property.NameEquals(JsonPropertyNames.Explode))
                    {
                        propertyValidator = __CorvusValidateExplode;
                        return true;
                    }
                }

                propertyValidator = null;
                return false;
            }
        }
    }
}