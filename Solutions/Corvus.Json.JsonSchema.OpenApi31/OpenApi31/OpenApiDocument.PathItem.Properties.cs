//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Corvus.Json.JsonSchema.OpenApi31;
public readonly partial struct OpenApiDocument
{
    /// <summary>
    /// Generated from JSON Schema.
    /// </summary>
    public readonly partial struct PathItem
    {
        /// <summary>
        /// The well-known property names in the JSON object.
        /// </summary>
        public static class JsonPropertyNames
        {
            /// <summary>
            /// JSON property name for <see cref = "Delete"/>.
            /// </summary>
            public static ReadOnlySpan<byte> DeleteUtf8 => "delete"u8;

            /// <summary>
            /// JSON property name for <see cref = "Delete"/>.
            /// </summary>
            public const string Delete = "delete";
            /// <summary>
            /// JSON property name for <see cref = "Description"/>.
            /// </summary>
            public static ReadOnlySpan<byte> DescriptionUtf8 => "description"u8;

            /// <summary>
            /// JSON property name for <see cref = "Description"/>.
            /// </summary>
            public const string Description = "description";
            /// <summary>
            /// JSON property name for <see cref = "Get"/>.
            /// </summary>
            public static ReadOnlySpan<byte> GetUtf8 => "get"u8;

            /// <summary>
            /// JSON property name for <see cref = "Get"/>.
            /// </summary>
            public const string Get = "get";
            /// <summary>
            /// JSON property name for <see cref = "Head"/>.
            /// </summary>
            public static ReadOnlySpan<byte> HeadUtf8 => "head"u8;

            /// <summary>
            /// JSON property name for <see cref = "Head"/>.
            /// </summary>
            public const string Head = "head";
            /// <summary>
            /// JSON property name for <see cref = "Options"/>.
            /// </summary>
            public static ReadOnlySpan<byte> OptionsUtf8 => "options"u8;

            /// <summary>
            /// JSON property name for <see cref = "Options"/>.
            /// </summary>
            public const string Options = "options";
            /// <summary>
            /// JSON property name for <see cref = "Parameters"/>.
            /// </summary>
            public static ReadOnlySpan<byte> ParametersUtf8 => "parameters"u8;

            /// <summary>
            /// JSON property name for <see cref = "Parameters"/>.
            /// </summary>
            public const string Parameters = "parameters";
            /// <summary>
            /// JSON property name for <see cref = "Patch"/>.
            /// </summary>
            public static ReadOnlySpan<byte> PatchUtf8 => "patch"u8;

            /// <summary>
            /// JSON property name for <see cref = "Patch"/>.
            /// </summary>
            public const string Patch = "patch";
            /// <summary>
            /// JSON property name for <see cref = "Post"/>.
            /// </summary>
            public static ReadOnlySpan<byte> PostUtf8 => "post"u8;

            /// <summary>
            /// JSON property name for <see cref = "Post"/>.
            /// </summary>
            public const string Post = "post";
            /// <summary>
            /// JSON property name for <see cref = "Put"/>.
            /// </summary>
            public static ReadOnlySpan<byte> PutUtf8 => "put"u8;

            /// <summary>
            /// JSON property name for <see cref = "Put"/>.
            /// </summary>
            public const string Put = "put";
            /// <summary>
            /// JSON property name for <see cref = "Servers"/>.
            /// </summary>
            public static ReadOnlySpan<byte> ServersUtf8 => "servers"u8;

            /// <summary>
            /// JSON property name for <see cref = "Servers"/>.
            /// </summary>
            public const string Servers = "servers";
            /// <summary>
            /// JSON property name for <see cref = "Summary"/>.
            /// </summary>
            public static ReadOnlySpan<byte> SummaryUtf8 => "summary"u8;

            /// <summary>
            /// JSON property name for <see cref = "Summary"/>.
            /// </summary>
            public const string Summary = "summary";
            /// <summary>
            /// JSON property name for <see cref = "Trace"/>.
            /// </summary>
            public static ReadOnlySpan<byte> TraceUtf8 => "trace"u8;

            /// <summary>
            /// JSON property name for <see cref = "Trace"/>.
            /// </summary>
            public const string Trace = "trace";
        }

        /// <summary>
        /// Gets the (optional) <c>delete</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation Delete
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.DeleteUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Delete, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>description</c> property.
        /// </summary>
        public Corvus.Json.JsonString Description
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.DescriptionUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonString(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Description, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonString>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>get</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation Get
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.GetUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Get, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>head</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation Head
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.HeadUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Head, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>options</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation Options
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.OptionsUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Options, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>parameters</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.PathItem.ParameterOrReferenceArray Parameters
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.ParametersUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.PathItem.ParameterOrReferenceArray(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Parameters, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.PathItem.ParameterOrReferenceArray>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>patch</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation Patch
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.PatchUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Patch, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>post</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation Post
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.PostUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Post, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>put</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation Put
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.PutUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Put, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>servers</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.PathItem.ServerArray Servers
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.ServersUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.PathItem.ServerArray(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Servers, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.PathItem.ServerArray>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>summary</c> property.
        /// </summary>
        public Corvus.Json.JsonString Summary
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.SummaryUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonString(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Summary, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonString>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets the (optional) <c>trace</c> property.
        /// </summary>
        public Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation Trace
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(JsonPropertyNames.TraceUtf8, out JsonElement result))
                    {
                        return new Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(JsonPropertyNames.Trace, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Creates an instance of a <see cref = "PathItem"/>.
        /// </summary>
        public static PathItem Create(Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation? delete = null, Corvus.Json.JsonString? description = null, Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation? get = null, Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation? head = null, Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation? options = null, Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.PathItem.ParameterOrReferenceArray? parameters = null, Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation? patch = null, Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation? post = null, Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation? put = null, Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.PathItem.ServerArray? servers = null, Corvus.Json.JsonString? summary = null, Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation? trace = null)
        {
            var builder = ImmutableList.CreateBuilder<JsonObjectProperty>();
            if (delete is Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation delete__)
            {
                builder.Add(JsonPropertyNames.Delete, delete__.AsAny);
            }

            if (description is Corvus.Json.JsonString description__)
            {
                builder.Add(JsonPropertyNames.Description, description__.AsAny);
            }

            if (get is Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation get__)
            {
                builder.Add(JsonPropertyNames.Get, get__.AsAny);
            }

            if (head is Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation head__)
            {
                builder.Add(JsonPropertyNames.Head, head__.AsAny);
            }

            if (options is Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation options__)
            {
                builder.Add(JsonPropertyNames.Options, options__.AsAny);
            }

            if (parameters is Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.PathItem.ParameterOrReferenceArray parameters__)
            {
                builder.Add(JsonPropertyNames.Parameters, parameters__.AsAny);
            }

            if (patch is Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation patch__)
            {
                builder.Add(JsonPropertyNames.Patch, patch__.AsAny);
            }

            if (post is Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation post__)
            {
                builder.Add(JsonPropertyNames.Post, post__.AsAny);
            }

            if (put is Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation put__)
            {
                builder.Add(JsonPropertyNames.Put, put__.AsAny);
            }

            if (servers is Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.PathItem.ServerArray servers__)
            {
                builder.Add(JsonPropertyNames.Servers, servers__.AsAny);
            }

            if (summary is Corvus.Json.JsonString summary__)
            {
                builder.Add(JsonPropertyNames.Summary, summary__.AsAny);
            }

            if (trace is Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation trace__)
            {
                builder.Add(JsonPropertyNames.Trace, trace__.AsAny);
            }

            return new(builder.ToImmutable());
        }

        /// <summary>
        /// Sets delete.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public PathItem WithDelete(in Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation value)
        {
            return this.SetProperty(JsonPropertyNames.Delete, value);
        }

        /// <summary>
        /// Sets description.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public PathItem WithDescription(in Corvus.Json.JsonString value)
        {
            return this.SetProperty(JsonPropertyNames.Description, value);
        }

        /// <summary>
        /// Sets get.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public PathItem WithGet(in Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation value)
        {
            return this.SetProperty(JsonPropertyNames.Get, value);
        }

        /// <summary>
        /// Sets head.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public PathItem WithHead(in Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation value)
        {
            return this.SetProperty(JsonPropertyNames.Head, value);
        }

        /// <summary>
        /// Sets options.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public PathItem WithOptions(in Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation value)
        {
            return this.SetProperty(JsonPropertyNames.Options, value);
        }

        /// <summary>
        /// Sets parameters.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public PathItem WithParameters(in Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.PathItem.ParameterOrReferenceArray value)
        {
            return this.SetProperty(JsonPropertyNames.Parameters, value);
        }

        /// <summary>
        /// Sets patch.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public PathItem WithPatch(in Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation value)
        {
            return this.SetProperty(JsonPropertyNames.Patch, value);
        }

        /// <summary>
        /// Sets post.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public PathItem WithPost(in Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation value)
        {
            return this.SetProperty(JsonPropertyNames.Post, value);
        }

        /// <summary>
        /// Sets put.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public PathItem WithPut(in Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation value)
        {
            return this.SetProperty(JsonPropertyNames.Put, value);
        }

        /// <summary>
        /// Sets servers.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public PathItem WithServers(in Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.PathItem.ServerArray value)
        {
            return this.SetProperty(JsonPropertyNames.Servers, value);
        }

        /// <summary>
        /// Sets summary.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public PathItem WithSummary(in Corvus.Json.JsonString value)
        {
            return this.SetProperty(JsonPropertyNames.Summary, value);
        }

        /// <summary>
        /// Sets trace.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public PathItem WithTrace(in Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation value)
        {
            return this.SetProperty(JsonPropertyNames.Trace, value);
        }

        private static ValidationContext __CorvusValidateSummary(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateDescription(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateServers(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.PathItem.ServerArray>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateParameters(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.PathItem.ParameterOrReferenceArray>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateGet(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidatePut(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidatePost(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateDelete(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateOptions(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateHead(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidatePatch(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateTrace(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonSchema.OpenApi31.OpenApiDocument.Operation>().Validate(validationContext, level);
        }

        /// <summary>
        /// Tries to get the validator for the given property.
        /// </summary>
        /// <param name = "property">The property for which to get the validator.</param>
        /// <param name = "hasJsonElementBacking"><c>True</c> if the object containing the property has a JsonElement backing.</param>
        /// <param name = "propertyValidator">The validator for the property, if provided by this schema.</param>
        /// <returns><c>True</c> if the validator was found.</returns>
        private bool __TryGetCorvusLocalPropertiesValidator(in JsonObjectProperty property, bool hasJsonElementBacking, [NotNullWhen(true)] out ObjectPropertyValidator? propertyValidator)
        {
            if (hasJsonElementBacking)
            {
                if (property.NameEquals(JsonPropertyNames.SummaryUtf8))
                {
                    propertyValidator = __CorvusValidateSummary;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.DescriptionUtf8))
                {
                    propertyValidator = __CorvusValidateDescription;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.ServersUtf8))
                {
                    propertyValidator = __CorvusValidateServers;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.ParametersUtf8))
                {
                    propertyValidator = __CorvusValidateParameters;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.GetUtf8))
                {
                    propertyValidator = __CorvusValidateGet;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.PutUtf8))
                {
                    propertyValidator = __CorvusValidatePut;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.PostUtf8))
                {
                    propertyValidator = __CorvusValidatePost;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.DeleteUtf8))
                {
                    propertyValidator = __CorvusValidateDelete;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.OptionsUtf8))
                {
                    propertyValidator = __CorvusValidateOptions;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.HeadUtf8))
                {
                    propertyValidator = __CorvusValidateHead;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.PatchUtf8))
                {
                    propertyValidator = __CorvusValidatePatch;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.TraceUtf8))
                {
                    propertyValidator = __CorvusValidateTrace;
                    return true;
                }
            }
            else
            {
                if (property.NameEquals(JsonPropertyNames.Summary))
                {
                    propertyValidator = __CorvusValidateSummary;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Description))
                {
                    propertyValidator = __CorvusValidateDescription;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Servers))
                {
                    propertyValidator = __CorvusValidateServers;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Parameters))
                {
                    propertyValidator = __CorvusValidateParameters;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Get))
                {
                    propertyValidator = __CorvusValidateGet;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Put))
                {
                    propertyValidator = __CorvusValidatePut;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Post))
                {
                    propertyValidator = __CorvusValidatePost;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Delete))
                {
                    propertyValidator = __CorvusValidateDelete;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Options))
                {
                    propertyValidator = __CorvusValidateOptions;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Head))
                {
                    propertyValidator = __CorvusValidateHead;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Patch))
                {
                    propertyValidator = __CorvusValidatePatch;
                    return true;
                }
                else if (property.NameEquals(JsonPropertyNames.Trace))
                {
                    propertyValidator = __CorvusValidateTrace;
                    return true;
                }
            }

            propertyValidator = null;
            return false;
        }
    }
}