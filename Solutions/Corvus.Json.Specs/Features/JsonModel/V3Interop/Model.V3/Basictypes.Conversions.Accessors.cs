//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using Corvus.Json;

namespace Model.V3;
/// <summary>
/// Generated from JSON Schema.
/// </summary>
public readonly partial struct Basictypes
{
    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonArray"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonArray AsExtJsonArray
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonArray)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonArray"/>.
    /// </summary>
    public bool IsExtJsonArray
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonArray)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonArray"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonArray(out Model.V3.Basictypes.ExtJsonArray result)
    {
        result = (Model.V3.Basictypes.ExtJsonArray)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonObject"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonObject AsExtJsonObject
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonObject)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonObject"/>.
    /// </summary>
    public bool IsExtJsonObject
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonObject)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonObject"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonObject(out Model.V3.Basictypes.ExtJsonObject result)
    {
        result = (Model.V3.Basictypes.ExtJsonObject)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonString"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonString AsExtJsonString
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonString)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonString"/>.
    /// </summary>
    public bool IsExtJsonString
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonString)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonString"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonString(out Model.V3.Basictypes.ExtJsonString result)
    {
        result = (Model.V3.Basictypes.ExtJsonString)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonDateTime"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonDateTime AsExtJsonDateTime
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonDateTime)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonDateTime"/>.
    /// </summary>
    public bool IsExtJsonDateTime
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonDateTime)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonDateTime"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonDateTime(out Model.V3.Basictypes.ExtJsonDateTime result)
    {
        result = (Model.V3.Basictypes.ExtJsonDateTime)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonDate"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonDate AsExtJsonDate
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonDate)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonDate"/>.
    /// </summary>
    public bool IsExtJsonDate
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonDate)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonDate"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonDate(out Model.V3.Basictypes.ExtJsonDate result)
    {
        result = (Model.V3.Basictypes.ExtJsonDate)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonDuration"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonDuration AsExtJsonDuration
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonDuration)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonDuration"/>.
    /// </summary>
    public bool IsExtJsonDuration
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonDuration)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonDuration"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonDuration(out Model.V3.Basictypes.ExtJsonDuration result)
    {
        result = (Model.V3.Basictypes.ExtJsonDuration)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonTime"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonTime AsExtJsonTime
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonTime)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonTime"/>.
    /// </summary>
    public bool IsExtJsonTime
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonTime)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonTime"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonTime(out Model.V3.Basictypes.ExtJsonTime result)
    {
        result = (Model.V3.Basictypes.ExtJsonTime)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonEmail"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonEmail AsExtJsonEmail
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonEmail)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonEmail"/>.
    /// </summary>
    public bool IsExtJsonEmail
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonEmail)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonEmail"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonEmail(out Model.V3.Basictypes.ExtJsonEmail result)
    {
        result = (Model.V3.Basictypes.ExtJsonEmail)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonHostname"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonHostname AsExtJsonHostname
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonHostname)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonHostname"/>.
    /// </summary>
    public bool IsExtJsonHostname
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonHostname)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonHostname"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonHostname(out Model.V3.Basictypes.ExtJsonHostname result)
    {
        result = (Model.V3.Basictypes.ExtJsonHostname)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonIdnEmail"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonIdnEmail AsExtJsonIdnEmail
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonIdnEmail)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonIdnEmail"/>.
    /// </summary>
    public bool IsExtJsonIdnEmail
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonIdnEmail)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonIdnEmail"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonIdnEmail(out Model.V3.Basictypes.ExtJsonIdnEmail result)
    {
        result = (Model.V3.Basictypes.ExtJsonIdnEmail)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonIpV4"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonIpV4 AsExtJsonIpV4
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonIpV4)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonIpV4"/>.
    /// </summary>
    public bool IsExtJsonIpV4
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonIpV4)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonIpV4"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonIpV4(out Model.V3.Basictypes.ExtJsonIpV4 result)
    {
        result = (Model.V3.Basictypes.ExtJsonIpV4)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonIpV6"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonIpV6 AsExtJsonIpV6
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonIpV6)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonIpV6"/>.
    /// </summary>
    public bool IsExtJsonIpV6
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonIpV6)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonIpV6"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonIpV6(out Model.V3.Basictypes.ExtJsonIpV6 result)
    {
        result = (Model.V3.Basictypes.ExtJsonIpV6)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonIri"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonIri AsExtJsonIri
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonIri)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonIri"/>.
    /// </summary>
    public bool IsExtJsonIri
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonIri)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonIri"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonIri(out Model.V3.Basictypes.ExtJsonIri result)
    {
        result = (Model.V3.Basictypes.ExtJsonIri)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonIriReference"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonIriReference AsExtJsonIriReference
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonIriReference)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonIriReference"/>.
    /// </summary>
    public bool IsExtJsonIriReference
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonIriReference)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonIriReference"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonIriReference(out Model.V3.Basictypes.ExtJsonIriReference result)
    {
        result = (Model.V3.Basictypes.ExtJsonIriReference)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonPointer"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonPointer AsExtJsonPointer
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonPointer)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonPointer"/>.
    /// </summary>
    public bool IsExtJsonPointer
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonPointer)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonPointer"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonPointer(out Model.V3.Basictypes.ExtJsonPointer result)
    {
        result = (Model.V3.Basictypes.ExtJsonPointer)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonRegex"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonRegex AsExtJsonRegex
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonRegex)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonRegex"/>.
    /// </summary>
    public bool IsExtJsonRegex
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonRegex)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonRegex"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonRegex(out Model.V3.Basictypes.ExtJsonRegex result)
    {
        result = (Model.V3.Basictypes.ExtJsonRegex)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonRelativePointer"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonRelativePointer AsExtJsonRelativePointer
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonRelativePointer)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonRelativePointer"/>.
    /// </summary>
    public bool IsExtJsonRelativePointer
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonRelativePointer)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonRelativePointer"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonRelativePointer(out Model.V3.Basictypes.ExtJsonRelativePointer result)
    {
        result = (Model.V3.Basictypes.ExtJsonRelativePointer)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonUri"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonUri AsExtJsonUri
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonUri)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonUri"/>.
    /// </summary>
    public bool IsExtJsonUri
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonUri)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonUri"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonUri(out Model.V3.Basictypes.ExtJsonUri result)
    {
        result = (Model.V3.Basictypes.ExtJsonUri)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonUriReference"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonUriReference AsExtJsonUriReference
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonUriReference)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonUriReference"/>.
    /// </summary>
    public bool IsExtJsonUriReference
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonUriReference)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonUriReference"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonUriReference(out Model.V3.Basictypes.ExtJsonUriReference result)
    {
        result = (Model.V3.Basictypes.ExtJsonUriReference)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonUriTemplate"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonUriTemplate AsExtJsonUriTemplate
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonUriTemplate)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonUriTemplate"/>.
    /// </summary>
    public bool IsExtJsonUriTemplate
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonUriTemplate)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonUriTemplate"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonUriTemplate(out Model.V3.Basictypes.ExtJsonUriTemplate result)
    {
        result = (Model.V3.Basictypes.ExtJsonUriTemplate)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonUuid"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonUuid AsExtJsonUuid
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonUuid)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonUuid"/>.
    /// </summary>
    public bool IsExtJsonUuid
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonUuid)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonUuid"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonUuid(out Model.V3.Basictypes.ExtJsonUuid result)
    {
        result = (Model.V3.Basictypes.ExtJsonUuid)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonNumber"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonNumber AsExtJsonNumber
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonNumber)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonNumber"/>.
    /// </summary>
    public bool IsExtJsonNumber
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonNumber)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonNumber"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonNumber(out Model.V3.Basictypes.ExtJsonNumber result)
    {
        result = (Model.V3.Basictypes.ExtJsonNumber)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonInteger"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonInteger AsExtJsonInteger
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonInteger)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonInteger"/>.
    /// </summary>
    public bool IsExtJsonInteger
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonInteger)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonInteger"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonInteger(out Model.V3.Basictypes.ExtJsonInteger result)
    {
        result = (Model.V3.Basictypes.ExtJsonInteger)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonHalf"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonHalf AsExtJsonHalf
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonHalf)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonHalf"/>.
    /// </summary>
    public bool IsExtJsonHalf
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonHalf)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonHalf"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonHalf(out Model.V3.Basictypes.ExtJsonHalf result)
    {
        result = (Model.V3.Basictypes.ExtJsonHalf)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonSingle"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonSingle AsExtJsonSingle
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonSingle)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonSingle"/>.
    /// </summary>
    public bool IsExtJsonSingle
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonSingle)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonSingle"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonSingle(out Model.V3.Basictypes.ExtJsonSingle result)
    {
        result = (Model.V3.Basictypes.ExtJsonSingle)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonDouble"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonDouble AsExtJsonDouble
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonDouble)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonDouble"/>.
    /// </summary>
    public bool IsExtJsonDouble
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonDouble)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonDouble"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonDouble(out Model.V3.Basictypes.ExtJsonDouble result)
    {
        result = (Model.V3.Basictypes.ExtJsonDouble)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonDecimal"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonDecimal AsExtJsonDecimal
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonDecimal)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonDecimal"/>.
    /// </summary>
    public bool IsExtJsonDecimal
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonDecimal)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonDecimal"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonDecimal(out Model.V3.Basictypes.ExtJsonDecimal result)
    {
        result = (Model.V3.Basictypes.ExtJsonDecimal)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonSByte"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonSByte AsExtJsonSByte
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonSByte)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonSByte"/>.
    /// </summary>
    public bool IsExtJsonSByte
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonSByte)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonSByte"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonSByte(out Model.V3.Basictypes.ExtJsonSByte result)
    {
        result = (Model.V3.Basictypes.ExtJsonSByte)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonInt16"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonInt16 AsExtJsonInt16
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonInt16)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonInt16"/>.
    /// </summary>
    public bool IsExtJsonInt16
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonInt16)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonInt16"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonInt16(out Model.V3.Basictypes.ExtJsonInt16 result)
    {
        result = (Model.V3.Basictypes.ExtJsonInt16)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonInt32"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonInt32 AsExtJsonInt32
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonInt32)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonInt32"/>.
    /// </summary>
    public bool IsExtJsonInt32
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonInt32)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonInt32"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonInt32(out Model.V3.Basictypes.ExtJsonInt32 result)
    {
        result = (Model.V3.Basictypes.ExtJsonInt32)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonInt64"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonInt64 AsExtJsonInt64
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonInt64)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonInt64"/>.
    /// </summary>
    public bool IsExtJsonInt64
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonInt64)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonInt64"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonInt64(out Model.V3.Basictypes.ExtJsonInt64 result)
    {
        result = (Model.V3.Basictypes.ExtJsonInt64)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonInt128"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonInt128 AsExtJsonInt128
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonInt128)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonInt128"/>.
    /// </summary>
    public bool IsExtJsonInt128
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonInt128)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonInt128"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonInt128(out Model.V3.Basictypes.ExtJsonInt128 result)
    {
        result = (Model.V3.Basictypes.ExtJsonInt128)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonByte"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonByte AsExtJsonByte
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonByte)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonByte"/>.
    /// </summary>
    public bool IsExtJsonByte
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonByte)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonByte"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonByte(out Model.V3.Basictypes.ExtJsonByte result)
    {
        result = (Model.V3.Basictypes.ExtJsonByte)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonUInt16"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonUInt16 AsExtJsonUInt16
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonUInt16)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonUInt16"/>.
    /// </summary>
    public bool IsExtJsonUInt16
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonUInt16)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonUInt16"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonUInt16(out Model.V3.Basictypes.ExtJsonUInt16 result)
    {
        result = (Model.V3.Basictypes.ExtJsonUInt16)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonUInt32"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonUInt32 AsExtJsonUInt32
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonUInt32)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonUInt32"/>.
    /// </summary>
    public bool IsExtJsonUInt32
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonUInt32)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonUInt32"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonUInt32(out Model.V3.Basictypes.ExtJsonUInt32 result)
    {
        result = (Model.V3.Basictypes.ExtJsonUInt32)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonUInt64"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonUInt64 AsExtJsonUInt64
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonUInt64)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonUInt64"/>.
    /// </summary>
    public bool IsExtJsonUInt64
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonUInt64)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonUInt64"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonUInt64(out Model.V3.Basictypes.ExtJsonUInt64 result)
    {
        result = (Model.V3.Basictypes.ExtJsonUInt64)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonUInt128"/>.
    /// </summary>
    public Model.V3.Basictypes.ExtJsonUInt128 AsExtJsonUInt128
    {
        get
        {
            return (Model.V3.Basictypes.ExtJsonUInt128)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Model.V3.Basictypes.ExtJsonUInt128"/>.
    /// </summary>
    public bool IsExtJsonUInt128
    {
        get
        {
            return ((Model.V3.Basictypes.ExtJsonUInt128)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Model.V3.Basictypes.ExtJsonUInt128"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsExtJsonUInt128(out Model.V3.Basictypes.ExtJsonUInt128 result)
    {
        result = (Model.V3.Basictypes.ExtJsonUInt128)this;
        return result.IsValid();
    }
}