//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Model.V3;
/// <summary>
/// Generated from JSON Schema.
/// </summary>
public readonly partial struct Basictypes
{
    /// <summary>
    /// Matches the value against each of the any of values, and returns the result of calling the provided match function for the first match found.
    /// </summary>
    /// <param name = "context">The context to pass to the match function.</param>
    /// <param name = "match0">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonArray"/> type.</param>
    /// <param name = "match1">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonObject"/> type.</param>
    /// <param name = "match2">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonString"/> type.</param>
    /// <param name = "match3">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonDateTime"/> type.</param>
    /// <param name = "match4">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonDate"/> type.</param>
    /// <param name = "match5">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonDuration"/> type.</param>
    /// <param name = "match6">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonTime"/> type.</param>
    /// <param name = "match7">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonEmail"/> type.</param>
    /// <param name = "match8">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonHostname"/> type.</param>
    /// <param name = "match9">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonIdnEmail"/> type.</param>
    /// <param name = "match10">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonIpV4"/> type.</param>
    /// <param name = "match11">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonIpV6"/> type.</param>
    /// <param name = "match12">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonIri"/> type.</param>
    /// <param name = "match13">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonIriReference"/> type.</param>
    /// <param name = "match14">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonPointer"/> type.</param>
    /// <param name = "match15">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonRegex"/> type.</param>
    /// <param name = "match16">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonRelativePointer"/> type.</param>
    /// <param name = "match17">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonUri"/> type.</param>
    /// <param name = "match18">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonUriReference"/> type.</param>
    /// <param name = "match19">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonUriTemplate"/> type.</param>
    /// <param name = "match20">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonUuid"/> type.</param>
    /// <param name = "match21">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonNumber"/> type.</param>
    /// <param name = "match22">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonInteger"/> type.</param>
    /// <param name = "match23">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonHalf"/> type.</param>
    /// <param name = "match24">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonSingle"/> type.</param>
    /// <param name = "match25">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonDouble"/> type.</param>
    /// <param name = "match26">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonDecimal"/> type.</param>
    /// <param name = "match27">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonSByte"/> type.</param>
    /// <param name = "match28">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonInt16"/> type.</param>
    /// <param name = "match29">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonInt32"/> type.</param>
    /// <param name = "match30">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonInt64"/> type.</param>
    /// <param name = "match31">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonInt128"/> type.</param>
    /// <param name = "match32">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonByte"/> type.</param>
    /// <param name = "match33">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonUInt16"/> type.</param>
    /// <param name = "match34">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonUInt32"/> type.</param>
    /// <param name = "match35">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonUInt64"/> type.</param>
    /// <param name = "match36">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonUInt128"/> type.</param>
    /// <param name = "defaultMatch">The fallback match.</param>
    public TOut Match<TIn, TOut>(in TIn context, Matcher<Model.V3.Basictypes.ExtJsonArray, TIn, TOut> match0, Matcher<Model.V3.Basictypes.ExtJsonObject, TIn, TOut> match1, Matcher<Model.V3.Basictypes.ExtJsonString, TIn, TOut> match2, Matcher<Model.V3.Basictypes.ExtJsonDateTime, TIn, TOut> match3, Matcher<Model.V3.Basictypes.ExtJsonDate, TIn, TOut> match4, Matcher<Model.V3.Basictypes.ExtJsonDuration, TIn, TOut> match5, Matcher<Model.V3.Basictypes.ExtJsonTime, TIn, TOut> match6, Matcher<Model.V3.Basictypes.ExtJsonEmail, TIn, TOut> match7, Matcher<Model.V3.Basictypes.ExtJsonHostname, TIn, TOut> match8, Matcher<Model.V3.Basictypes.ExtJsonIdnEmail, TIn, TOut> match9, Matcher<Model.V3.Basictypes.ExtJsonIpV4, TIn, TOut> match10, Matcher<Model.V3.Basictypes.ExtJsonIpV6, TIn, TOut> match11, Matcher<Model.V3.Basictypes.ExtJsonIri, TIn, TOut> match12, Matcher<Model.V3.Basictypes.ExtJsonIriReference, TIn, TOut> match13, Matcher<Model.V3.Basictypes.ExtJsonPointer, TIn, TOut> match14, Matcher<Model.V3.Basictypes.ExtJsonRegex, TIn, TOut> match15, Matcher<Model.V3.Basictypes.ExtJsonRelativePointer, TIn, TOut> match16, Matcher<Model.V3.Basictypes.ExtJsonUri, TIn, TOut> match17, Matcher<Model.V3.Basictypes.ExtJsonUriReference, TIn, TOut> match18, Matcher<Model.V3.Basictypes.ExtJsonUriTemplate, TIn, TOut> match19, Matcher<Model.V3.Basictypes.ExtJsonUuid, TIn, TOut> match20, Matcher<Model.V3.Basictypes.ExtJsonNumber, TIn, TOut> match21, Matcher<Model.V3.Basictypes.ExtJsonInteger, TIn, TOut> match22, Matcher<Model.V3.Basictypes.ExtJsonHalf, TIn, TOut> match23, Matcher<Model.V3.Basictypes.ExtJsonSingle, TIn, TOut> match24, Matcher<Model.V3.Basictypes.ExtJsonDouble, TIn, TOut> match25, Matcher<Model.V3.Basictypes.ExtJsonDecimal, TIn, TOut> match26, Matcher<Model.V3.Basictypes.ExtJsonSByte, TIn, TOut> match27, Matcher<Model.V3.Basictypes.ExtJsonInt16, TIn, TOut> match28, Matcher<Model.V3.Basictypes.ExtJsonInt32, TIn, TOut> match29, Matcher<Model.V3.Basictypes.ExtJsonInt64, TIn, TOut> match30, Matcher<Model.V3.Basictypes.ExtJsonInt128, TIn, TOut> match31, Matcher<Model.V3.Basictypes.ExtJsonByte, TIn, TOut> match32, Matcher<Model.V3.Basictypes.ExtJsonUInt16, TIn, TOut> match33, Matcher<Model.V3.Basictypes.ExtJsonUInt32, TIn, TOut> match34, Matcher<Model.V3.Basictypes.ExtJsonUInt64, TIn, TOut> match35, Matcher<Model.V3.Basictypes.ExtJsonUInt128, TIn, TOut> match36, Matcher<Basictypes, TIn, TOut> defaultMatch)
    {
        var oneOf0 = this.As<Model.V3.Basictypes.ExtJsonArray>();
        if (oneOf0.IsValid())
        {
            return match0(oneOf0, context);
        }

        var oneOf1 = this.As<Model.V3.Basictypes.ExtJsonObject>();
        if (oneOf1.IsValid())
        {
            return match1(oneOf1, context);
        }

        var oneOf2 = this.As<Model.V3.Basictypes.ExtJsonString>();
        if (oneOf2.IsValid())
        {
            return match2(oneOf2, context);
        }

        var oneOf3 = this.As<Model.V3.Basictypes.ExtJsonDateTime>();
        if (oneOf3.IsValid())
        {
            return match3(oneOf3, context);
        }

        var oneOf4 = this.As<Model.V3.Basictypes.ExtJsonDate>();
        if (oneOf4.IsValid())
        {
            return match4(oneOf4, context);
        }

        var oneOf5 = this.As<Model.V3.Basictypes.ExtJsonDuration>();
        if (oneOf5.IsValid())
        {
            return match5(oneOf5, context);
        }

        var oneOf6 = this.As<Model.V3.Basictypes.ExtJsonTime>();
        if (oneOf6.IsValid())
        {
            return match6(oneOf6, context);
        }

        var oneOf7 = this.As<Model.V3.Basictypes.ExtJsonEmail>();
        if (oneOf7.IsValid())
        {
            return match7(oneOf7, context);
        }

        var oneOf8 = this.As<Model.V3.Basictypes.ExtJsonHostname>();
        if (oneOf8.IsValid())
        {
            return match8(oneOf8, context);
        }

        var oneOf9 = this.As<Model.V3.Basictypes.ExtJsonIdnEmail>();
        if (oneOf9.IsValid())
        {
            return match9(oneOf9, context);
        }

        var oneOf10 = this.As<Model.V3.Basictypes.ExtJsonIpV4>();
        if (oneOf10.IsValid())
        {
            return match10(oneOf10, context);
        }

        var oneOf11 = this.As<Model.V3.Basictypes.ExtJsonIpV6>();
        if (oneOf11.IsValid())
        {
            return match11(oneOf11, context);
        }

        var oneOf12 = this.As<Model.V3.Basictypes.ExtJsonIri>();
        if (oneOf12.IsValid())
        {
            return match12(oneOf12, context);
        }

        var oneOf13 = this.As<Model.V3.Basictypes.ExtJsonIriReference>();
        if (oneOf13.IsValid())
        {
            return match13(oneOf13, context);
        }

        var oneOf14 = this.As<Model.V3.Basictypes.ExtJsonPointer>();
        if (oneOf14.IsValid())
        {
            return match14(oneOf14, context);
        }

        var oneOf15 = this.As<Model.V3.Basictypes.ExtJsonRegex>();
        if (oneOf15.IsValid())
        {
            return match15(oneOf15, context);
        }

        var oneOf16 = this.As<Model.V3.Basictypes.ExtJsonRelativePointer>();
        if (oneOf16.IsValid())
        {
            return match16(oneOf16, context);
        }

        var oneOf17 = this.As<Model.V3.Basictypes.ExtJsonUri>();
        if (oneOf17.IsValid())
        {
            return match17(oneOf17, context);
        }

        var oneOf18 = this.As<Model.V3.Basictypes.ExtJsonUriReference>();
        if (oneOf18.IsValid())
        {
            return match18(oneOf18, context);
        }

        var oneOf19 = this.As<Model.V3.Basictypes.ExtJsonUriTemplate>();
        if (oneOf19.IsValid())
        {
            return match19(oneOf19, context);
        }

        var oneOf20 = this.As<Model.V3.Basictypes.ExtJsonUuid>();
        if (oneOf20.IsValid())
        {
            return match20(oneOf20, context);
        }

        var oneOf21 = this.As<Model.V3.Basictypes.ExtJsonNumber>();
        if (oneOf21.IsValid())
        {
            return match21(oneOf21, context);
        }

        var oneOf22 = this.As<Model.V3.Basictypes.ExtJsonInteger>();
        if (oneOf22.IsValid())
        {
            return match22(oneOf22, context);
        }

        var oneOf23 = this.As<Model.V3.Basictypes.ExtJsonHalf>();
        if (oneOf23.IsValid())
        {
            return match23(oneOf23, context);
        }

        var oneOf24 = this.As<Model.V3.Basictypes.ExtJsonSingle>();
        if (oneOf24.IsValid())
        {
            return match24(oneOf24, context);
        }

        var oneOf25 = this.As<Model.V3.Basictypes.ExtJsonDouble>();
        if (oneOf25.IsValid())
        {
            return match25(oneOf25, context);
        }

        var oneOf26 = this.As<Model.V3.Basictypes.ExtJsonDecimal>();
        if (oneOf26.IsValid())
        {
            return match26(oneOf26, context);
        }

        var oneOf27 = this.As<Model.V3.Basictypes.ExtJsonSByte>();
        if (oneOf27.IsValid())
        {
            return match27(oneOf27, context);
        }

        var oneOf28 = this.As<Model.V3.Basictypes.ExtJsonInt16>();
        if (oneOf28.IsValid())
        {
            return match28(oneOf28, context);
        }

        var oneOf29 = this.As<Model.V3.Basictypes.ExtJsonInt32>();
        if (oneOf29.IsValid())
        {
            return match29(oneOf29, context);
        }

        var oneOf30 = this.As<Model.V3.Basictypes.ExtJsonInt64>();
        if (oneOf30.IsValid())
        {
            return match30(oneOf30, context);
        }

        var oneOf31 = this.As<Model.V3.Basictypes.ExtJsonInt128>();
        if (oneOf31.IsValid())
        {
            return match31(oneOf31, context);
        }

        var oneOf32 = this.As<Model.V3.Basictypes.ExtJsonByte>();
        if (oneOf32.IsValid())
        {
            return match32(oneOf32, context);
        }

        var oneOf33 = this.As<Model.V3.Basictypes.ExtJsonUInt16>();
        if (oneOf33.IsValid())
        {
            return match33(oneOf33, context);
        }

        var oneOf34 = this.As<Model.V3.Basictypes.ExtJsonUInt32>();
        if (oneOf34.IsValid())
        {
            return match34(oneOf34, context);
        }

        var oneOf35 = this.As<Model.V3.Basictypes.ExtJsonUInt64>();
        if (oneOf35.IsValid())
        {
            return match35(oneOf35, context);
        }

        var oneOf36 = this.As<Model.V3.Basictypes.ExtJsonUInt128>();
        if (oneOf36.IsValid())
        {
            return match36(oneOf36, context);
        }

        return defaultMatch(this, context);
    }

    /// <summary>
    /// Matches the value against each of the any of values, and returns the result of calling the provided match function for the first match found.
    /// </summary>
    /// <param name = "match0">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonArray"/> type.</param>
    /// <param name = "match1">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonObject"/> type.</param>
    /// <param name = "match2">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonString"/> type.</param>
    /// <param name = "match3">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonDateTime"/> type.</param>
    /// <param name = "match4">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonDate"/> type.</param>
    /// <param name = "match5">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonDuration"/> type.</param>
    /// <param name = "match6">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonTime"/> type.</param>
    /// <param name = "match7">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonEmail"/> type.</param>
    /// <param name = "match8">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonHostname"/> type.</param>
    /// <param name = "match9">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonIdnEmail"/> type.</param>
    /// <param name = "match10">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonIpV4"/> type.</param>
    /// <param name = "match11">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonIpV6"/> type.</param>
    /// <param name = "match12">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonIri"/> type.</param>
    /// <param name = "match13">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonIriReference"/> type.</param>
    /// <param name = "match14">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonPointer"/> type.</param>
    /// <param name = "match15">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonRegex"/> type.</param>
    /// <param name = "match16">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonRelativePointer"/> type.</param>
    /// <param name = "match17">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonUri"/> type.</param>
    /// <param name = "match18">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonUriReference"/> type.</param>
    /// <param name = "match19">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonUriTemplate"/> type.</param>
    /// <param name = "match20">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonUuid"/> type.</param>
    /// <param name = "match21">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonNumber"/> type.</param>
    /// <param name = "match22">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonInteger"/> type.</param>
    /// <param name = "match23">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonHalf"/> type.</param>
    /// <param name = "match24">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonSingle"/> type.</param>
    /// <param name = "match25">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonDouble"/> type.</param>
    /// <param name = "match26">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonDecimal"/> type.</param>
    /// <param name = "match27">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonSByte"/> type.</param>
    /// <param name = "match28">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonInt16"/> type.</param>
    /// <param name = "match29">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonInt32"/> type.</param>
    /// <param name = "match30">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonInt64"/> type.</param>
    /// <param name = "match31">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonInt128"/> type.</param>
    /// <param name = "match32">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonByte"/> type.</param>
    /// <param name = "match33">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonUInt16"/> type.</param>
    /// <param name = "match34">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonUInt32"/> type.</param>
    /// <param name = "match35">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonUInt64"/> type.</param>
    /// <param name = "match36">The function to call if the value matches the <see cref = "Model.V3.Basictypes.ExtJsonUInt128"/> type.</param>
    /// <param name = "defaultMatch">The fallback match.</param>
    public TOut Match<TOut>(Matcher<Model.V3.Basictypes.ExtJsonArray, TOut> match0, Matcher<Model.V3.Basictypes.ExtJsonObject, TOut> match1, Matcher<Model.V3.Basictypes.ExtJsonString, TOut> match2, Matcher<Model.V3.Basictypes.ExtJsonDateTime, TOut> match3, Matcher<Model.V3.Basictypes.ExtJsonDate, TOut> match4, Matcher<Model.V3.Basictypes.ExtJsonDuration, TOut> match5, Matcher<Model.V3.Basictypes.ExtJsonTime, TOut> match6, Matcher<Model.V3.Basictypes.ExtJsonEmail, TOut> match7, Matcher<Model.V3.Basictypes.ExtJsonHostname, TOut> match8, Matcher<Model.V3.Basictypes.ExtJsonIdnEmail, TOut> match9, Matcher<Model.V3.Basictypes.ExtJsonIpV4, TOut> match10, Matcher<Model.V3.Basictypes.ExtJsonIpV6, TOut> match11, Matcher<Model.V3.Basictypes.ExtJsonIri, TOut> match12, Matcher<Model.V3.Basictypes.ExtJsonIriReference, TOut> match13, Matcher<Model.V3.Basictypes.ExtJsonPointer, TOut> match14, Matcher<Model.V3.Basictypes.ExtJsonRegex, TOut> match15, Matcher<Model.V3.Basictypes.ExtJsonRelativePointer, TOut> match16, Matcher<Model.V3.Basictypes.ExtJsonUri, TOut> match17, Matcher<Model.V3.Basictypes.ExtJsonUriReference, TOut> match18, Matcher<Model.V3.Basictypes.ExtJsonUriTemplate, TOut> match19, Matcher<Model.V3.Basictypes.ExtJsonUuid, TOut> match20, Matcher<Model.V3.Basictypes.ExtJsonNumber, TOut> match21, Matcher<Model.V3.Basictypes.ExtJsonInteger, TOut> match22, Matcher<Model.V3.Basictypes.ExtJsonHalf, TOut> match23, Matcher<Model.V3.Basictypes.ExtJsonSingle, TOut> match24, Matcher<Model.V3.Basictypes.ExtJsonDouble, TOut> match25, Matcher<Model.V3.Basictypes.ExtJsonDecimal, TOut> match26, Matcher<Model.V3.Basictypes.ExtJsonSByte, TOut> match27, Matcher<Model.V3.Basictypes.ExtJsonInt16, TOut> match28, Matcher<Model.V3.Basictypes.ExtJsonInt32, TOut> match29, Matcher<Model.V3.Basictypes.ExtJsonInt64, TOut> match30, Matcher<Model.V3.Basictypes.ExtJsonInt128, TOut> match31, Matcher<Model.V3.Basictypes.ExtJsonByte, TOut> match32, Matcher<Model.V3.Basictypes.ExtJsonUInt16, TOut> match33, Matcher<Model.V3.Basictypes.ExtJsonUInt32, TOut> match34, Matcher<Model.V3.Basictypes.ExtJsonUInt64, TOut> match35, Matcher<Model.V3.Basictypes.ExtJsonUInt128, TOut> match36, Matcher<Basictypes, TOut> defaultMatch)
    {
        var oneOf0 = this.As<Model.V3.Basictypes.ExtJsonArray>();
        if (oneOf0.IsValid())
        {
            return match0(oneOf0);
        }

        var oneOf1 = this.As<Model.V3.Basictypes.ExtJsonObject>();
        if (oneOf1.IsValid())
        {
            return match1(oneOf1);
        }

        var oneOf2 = this.As<Model.V3.Basictypes.ExtJsonString>();
        if (oneOf2.IsValid())
        {
            return match2(oneOf2);
        }

        var oneOf3 = this.As<Model.V3.Basictypes.ExtJsonDateTime>();
        if (oneOf3.IsValid())
        {
            return match3(oneOf3);
        }

        var oneOf4 = this.As<Model.V3.Basictypes.ExtJsonDate>();
        if (oneOf4.IsValid())
        {
            return match4(oneOf4);
        }

        var oneOf5 = this.As<Model.V3.Basictypes.ExtJsonDuration>();
        if (oneOf5.IsValid())
        {
            return match5(oneOf5);
        }

        var oneOf6 = this.As<Model.V3.Basictypes.ExtJsonTime>();
        if (oneOf6.IsValid())
        {
            return match6(oneOf6);
        }

        var oneOf7 = this.As<Model.V3.Basictypes.ExtJsonEmail>();
        if (oneOf7.IsValid())
        {
            return match7(oneOf7);
        }

        var oneOf8 = this.As<Model.V3.Basictypes.ExtJsonHostname>();
        if (oneOf8.IsValid())
        {
            return match8(oneOf8);
        }

        var oneOf9 = this.As<Model.V3.Basictypes.ExtJsonIdnEmail>();
        if (oneOf9.IsValid())
        {
            return match9(oneOf9);
        }

        var oneOf10 = this.As<Model.V3.Basictypes.ExtJsonIpV4>();
        if (oneOf10.IsValid())
        {
            return match10(oneOf10);
        }

        var oneOf11 = this.As<Model.V3.Basictypes.ExtJsonIpV6>();
        if (oneOf11.IsValid())
        {
            return match11(oneOf11);
        }

        var oneOf12 = this.As<Model.V3.Basictypes.ExtJsonIri>();
        if (oneOf12.IsValid())
        {
            return match12(oneOf12);
        }

        var oneOf13 = this.As<Model.V3.Basictypes.ExtJsonIriReference>();
        if (oneOf13.IsValid())
        {
            return match13(oneOf13);
        }

        var oneOf14 = this.As<Model.V3.Basictypes.ExtJsonPointer>();
        if (oneOf14.IsValid())
        {
            return match14(oneOf14);
        }

        var oneOf15 = this.As<Model.V3.Basictypes.ExtJsonRegex>();
        if (oneOf15.IsValid())
        {
            return match15(oneOf15);
        }

        var oneOf16 = this.As<Model.V3.Basictypes.ExtJsonRelativePointer>();
        if (oneOf16.IsValid())
        {
            return match16(oneOf16);
        }

        var oneOf17 = this.As<Model.V3.Basictypes.ExtJsonUri>();
        if (oneOf17.IsValid())
        {
            return match17(oneOf17);
        }

        var oneOf18 = this.As<Model.V3.Basictypes.ExtJsonUriReference>();
        if (oneOf18.IsValid())
        {
            return match18(oneOf18);
        }

        var oneOf19 = this.As<Model.V3.Basictypes.ExtJsonUriTemplate>();
        if (oneOf19.IsValid())
        {
            return match19(oneOf19);
        }

        var oneOf20 = this.As<Model.V3.Basictypes.ExtJsonUuid>();
        if (oneOf20.IsValid())
        {
            return match20(oneOf20);
        }

        var oneOf21 = this.As<Model.V3.Basictypes.ExtJsonNumber>();
        if (oneOf21.IsValid())
        {
            return match21(oneOf21);
        }

        var oneOf22 = this.As<Model.V3.Basictypes.ExtJsonInteger>();
        if (oneOf22.IsValid())
        {
            return match22(oneOf22);
        }

        var oneOf23 = this.As<Model.V3.Basictypes.ExtJsonHalf>();
        if (oneOf23.IsValid())
        {
            return match23(oneOf23);
        }

        var oneOf24 = this.As<Model.V3.Basictypes.ExtJsonSingle>();
        if (oneOf24.IsValid())
        {
            return match24(oneOf24);
        }

        var oneOf25 = this.As<Model.V3.Basictypes.ExtJsonDouble>();
        if (oneOf25.IsValid())
        {
            return match25(oneOf25);
        }

        var oneOf26 = this.As<Model.V3.Basictypes.ExtJsonDecimal>();
        if (oneOf26.IsValid())
        {
            return match26(oneOf26);
        }

        var oneOf27 = this.As<Model.V3.Basictypes.ExtJsonSByte>();
        if (oneOf27.IsValid())
        {
            return match27(oneOf27);
        }

        var oneOf28 = this.As<Model.V3.Basictypes.ExtJsonInt16>();
        if (oneOf28.IsValid())
        {
            return match28(oneOf28);
        }

        var oneOf29 = this.As<Model.V3.Basictypes.ExtJsonInt32>();
        if (oneOf29.IsValid())
        {
            return match29(oneOf29);
        }

        var oneOf30 = this.As<Model.V3.Basictypes.ExtJsonInt64>();
        if (oneOf30.IsValid())
        {
            return match30(oneOf30);
        }

        var oneOf31 = this.As<Model.V3.Basictypes.ExtJsonInt128>();
        if (oneOf31.IsValid())
        {
            return match31(oneOf31);
        }

        var oneOf32 = this.As<Model.V3.Basictypes.ExtJsonByte>();
        if (oneOf32.IsValid())
        {
            return match32(oneOf32);
        }

        var oneOf33 = this.As<Model.V3.Basictypes.ExtJsonUInt16>();
        if (oneOf33.IsValid())
        {
            return match33(oneOf33);
        }

        var oneOf34 = this.As<Model.V3.Basictypes.ExtJsonUInt32>();
        if (oneOf34.IsValid())
        {
            return match34(oneOf34);
        }

        var oneOf35 = this.As<Model.V3.Basictypes.ExtJsonUInt64>();
        if (oneOf35.IsValid())
        {
            return match35(oneOf35);
        }

        var oneOf36 = this.As<Model.V3.Basictypes.ExtJsonUInt128>();
        if (oneOf36.IsValid())
        {
            return match36(oneOf36);
        }

        return defaultMatch(this);
    }
}