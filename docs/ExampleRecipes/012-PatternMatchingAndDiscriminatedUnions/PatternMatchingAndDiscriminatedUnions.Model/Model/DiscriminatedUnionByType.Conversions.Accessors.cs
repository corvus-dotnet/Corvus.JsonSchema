//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using Corvus.Json;

namespace JsonSchemaSample.Api;
/// <summary>
/// Generated from JSON Schema.
/// </summary>
public readonly partial struct DiscriminatedUnionByType
{
    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Corvus.Json.JsonString"/>.
    /// </summary>
    public bool IsJsonString
    {
        get
        {
            return ((Corvus.Json.JsonString)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Corvus.Json.JsonString"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsJsonString(out Corvus.Json.JsonString result)
    {
        result = (Corvus.Json.JsonString)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Corvus.Json.JsonInt32"/>.
    /// </summary>
    public bool IsJsonInt32
    {
        get
        {
            return ((Corvus.Json.JsonInt32)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Corvus.Json.JsonInt32"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsJsonInt32(out Corvus.Json.JsonInt32 result)
    {
        result = (Corvus.Json.JsonInt32)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "JsonSchemaSample.Api.PersonOpen"/>.
    /// </summary>
    public JsonSchemaSample.Api.PersonOpen AsPersonOpen
    {
        get
        {
            return (JsonSchemaSample.Api.PersonOpen)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "JsonSchemaSample.Api.PersonOpen"/>.
    /// </summary>
    public bool IsPersonOpen
    {
        get
        {
            return ((JsonSchemaSample.Api.PersonOpen)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "JsonSchemaSample.Api.PersonOpen"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsPersonOpen(out JsonSchemaSample.Api.PersonOpen result)
    {
        result = (JsonSchemaSample.Api.PersonOpen)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "JsonSchemaSample.Api.DiscriminatedUnionByType.People"/>.
    /// </summary>
    public JsonSchemaSample.Api.DiscriminatedUnionByType.People AsPeople
    {
        get
        {
            return (JsonSchemaSample.Api.DiscriminatedUnionByType.People)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "JsonSchemaSample.Api.DiscriminatedUnionByType.People"/>.
    /// </summary>
    public bool IsPeople
    {
        get
        {
            return ((JsonSchemaSample.Api.DiscriminatedUnionByType.People)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "JsonSchemaSample.Api.DiscriminatedUnionByType.People"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsPeople(out JsonSchemaSample.Api.DiscriminatedUnionByType.People result)
    {
        result = (JsonSchemaSample.Api.DiscriminatedUnionByType.People)this;
        return result.IsValid();
    }
}