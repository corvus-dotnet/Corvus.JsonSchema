//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace JsonSchemaSample.Api;
/// <summary>
/// Generated from JSON Schema.
/// </summary>
public readonly partial struct NumericOptions
{
    /// <summary>
    /// Matches the value against each of the any of values, and returns the result of calling the provided match function for the first match found.
    /// </summary>
    /// <param name = "context">The context to pass to the match function.</param>
    /// <param name = "match0">The function to call if the value matches the <see cref = "JsonSchemaSample.Api.NumericOptions.Foo"/> type.</param>
    /// <param name = "match1">The function to call if the value matches the <see cref = "JsonSchemaSample.Api.NumericOptions.Bar"/> type.</param>
    /// <param name = "match2">The function to call if the value matches the <see cref = "JsonSchemaSample.Api.NumericOptions.Baz"/> type.</param>
    /// <param name = "defaultMatch">The fallback match.</param>
    public TOut Match<TIn, TOut>(in TIn context, Matcher<JsonSchemaSample.Api.NumericOptions.Foo, TIn, TOut> match0, Matcher<JsonSchemaSample.Api.NumericOptions.Bar, TIn, TOut> match1, Matcher<JsonSchemaSample.Api.NumericOptions.Baz, TIn, TOut> match2, Matcher<NumericOptions, TIn, TOut> defaultMatch)
    {
        var oneOf0 = this.As<JsonSchemaSample.Api.NumericOptions.Foo>();
        if (oneOf0.IsValid())
        {
            return match0(oneOf0, context);
        }

        var oneOf1 = this.As<JsonSchemaSample.Api.NumericOptions.Bar>();
        if (oneOf1.IsValid())
        {
            return match1(oneOf1, context);
        }

        var oneOf2 = this.As<JsonSchemaSample.Api.NumericOptions.Baz>();
        if (oneOf2.IsValid())
        {
            return match2(oneOf2, context);
        }

        return defaultMatch(this, context);
    }

    /// <summary>
    /// Matches the value against each of the any of values, and returns the result of calling the provided match function for the first match found.
    /// </summary>
    /// <param name = "match0">The function to call if the value matches the <see cref = "JsonSchemaSample.Api.NumericOptions.Foo"/> type.</param>
    /// <param name = "match1">The function to call if the value matches the <see cref = "JsonSchemaSample.Api.NumericOptions.Bar"/> type.</param>
    /// <param name = "match2">The function to call if the value matches the <see cref = "JsonSchemaSample.Api.NumericOptions.Baz"/> type.</param>
    /// <param name = "defaultMatch">The fallback match.</param>
    public TOut Match<TOut>(Matcher<JsonSchemaSample.Api.NumericOptions.Foo, TOut> match0, Matcher<JsonSchemaSample.Api.NumericOptions.Bar, TOut> match1, Matcher<JsonSchemaSample.Api.NumericOptions.Baz, TOut> match2, Matcher<NumericOptions, TOut> defaultMatch)
    {
        var oneOf0 = this.As<JsonSchemaSample.Api.NumericOptions.Foo>();
        if (oneOf0.IsValid())
        {
            return match0(oneOf0);
        }

        var oneOf1 = this.As<JsonSchemaSample.Api.NumericOptions.Bar>();
        if (oneOf1.IsValid())
        {
            return match1(oneOf1);
        }

        var oneOf2 = this.As<JsonSchemaSample.Api.NumericOptions.Baz>();
        if (oneOf2.IsValid())
        {
            return match2(oneOf2);
        }

        return defaultMatch(this);
    }
}